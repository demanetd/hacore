{
	"info": {
		"_postman_id": "fee5d617-8dab-4d1c-8493-756908ebf577",
		"name": "dbapi-transactions",
		"description": "Provides transactions information from your customer's savings and current accounts for the last 13 months.\n\nContact Support:\n Email: bank.api@db.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33869253"
	},
	"item": [
		{
			"name": "/",
			"item": [
				{
					"name": "Reads transactions for cash accounts.",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "clientSecret",
									"value": "Jecoa6J4vqx51nZm0cWicKNogizq0XstW3qJ7sAfOJVE8ZhGbSeIxIhf3aINFPgawcbSmqBd7WdsXzoKbOwziQ",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://simulator-api.db.com:443/gw/oidc/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								},
								{
									"key": "state",
									"value": "aTestingState",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "811b134b-23d1-4470-8f04-a12fb3799d3f",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "http://localhost:8100",
									"type": "string"
								},
								{
									"key": "scope",
									"value": "read_transactions openid",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://simulator-api.db.com:443/gw/oidc/authorize",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Correlation-Id",
								"value": "<string>",
								"description": "Free form key controlled by the caller e.g. uuid"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/?iban=DE00500700100200028924&bookingDateFrom=2024-06-01&bookingDateTo=2024-09-30&sortBy=bookingDate[DESC]&limit=20&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "iban",
									"value": "DE00500700100200028924",
									"description": "(Required) IBAN representing an account of the current user."
								},
								{
									"key": "currencyCode",
									"value": "CQY",
									"description": "ISO 4217 Alpha 3 currency code.",
									"disabled": true
								},
								{
									"key": "bookingDateFrom",
									"value": "2024-06-01",
									"description": "booking date of original transaction. Date in ISO 8601 format, YYYY-MM-DD. If not provided, 1980-01-01 will be chosen if called with a PSD2-compliant strong customer authentication (SCA), or the date prior to today with a maximum PSD2-compliant daycount if not called with a PSD2-compliant SCA. Please note that choosing a date too far into the past might lead to an error response if the result set would become too big. In this case narrowing the interval can help."
								},
								{
									"key": "bookingDateTo",
									"value": "2024-09-30",
									"description": "booking date until which the transactions to be searched for. Date in ISO 8601 format YYYY-MM-DD. If not provided, the current day will be chosen. bookingDateTo must be greater than or equal to bookingDateFrom."
								},
								{
									"key": "sortBy",
									"value": "bookingDate[DESC]",
									"description": "sort order of transactions - supported sort orders are 'bookingDate[ASC]' or 'bookingDate[DESC]'."
								},
								{
									"key": "limit",
									"value": "20",
									"description": "limit defines count of resources per request/page."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "the page to be returned."
								}
							]
						},
						"description": "Reads transactions for cash accounts (current and deposit) for the given customer. The API provides in default up to 13 months of transaction history. If given IBAN is not valid or does not represent an account of the current customer, an empty result is returned. It is not apparent who issued a transaction, only whether the user gained or lost money by it (based on whether the amount is positive or negative respectively). The maximum number of transactions returned is 200."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Correlation-Id",
										"value": "<string>",
										"description": "Free form key controlled by the caller e.g. uuid"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/?iban=BR41UNZ9JQ8RCOPDTRR&currencyCode=CQY&bookingDateFrom=<date>&bookingDateTo=<date>&sortBy=bookingDate[ASC]&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "iban",
											"value": "BR41UNZ9JQ8RCOPDTRR",
											"description": "(Required) IBAN representing an account of the current user."
										},
										{
											"key": "currencyCode",
											"value": "CQY",
											"description": "ISO 4217 Alpha 3 currency code."
										},
										{
											"key": "bookingDateFrom",
											"value": "<date>",
											"description": "booking date of original transaction. Date in ISO 8601 format, YYYY-MM-DD. If not provided, 1980-01-01 will be chosen if called with a PSD2-compliant strong customer authentication (SCA), or the date prior to today with a maximum PSD2-compliant daycount if not called with a PSD2-compliant SCA. Please note that choosing a date too far into the past might lead to an error response if the result set would become too big. In this case narrowing the interval can help."
										},
										{
											"key": "bookingDateTo",
											"value": "<date>",
											"description": "booking date until which the transactions to be searched for. Date in ISO 8601 format YYYY-MM-DD. If not provided, the current day will be chosen. bookingDateTo must be greater than or equal to bookingDateFrom."
										},
										{
											"key": "sortBy",
											"value": "bookingDate[ASC]",
											"description": "sort order of transactions - supported sort orders are 'bookingDate[ASC]' or 'bookingDate[DESC]'."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "limit defines count of resources per request/page."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "the page to be returned."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalItems\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"transactions\": [\n    {\n      \"amount\": \"<number>\",\n      \"bookingDate\": \"<string>\",\n      \"currencyCode\": \"ZNH\",\n      \"id\": \"<string>\",\n      \"originIban\": \"ZV15TQ8J7K0GGWTJR4VHEUBJAQRL\",\n      \"counterPartyName\": \"<string>\",\n      \"counterPartyIban\": \"NW66YR66NHIVW4CZH\",\n      \"counterPartyBic\": \"BKFJRFLH\",\n      \"paymentReference\": \"<string>\",\n      \"transactionCode\": \"<string>\",\n      \"externalBankTransactionDomainCode\": \"<string>\",\n      \"externalBankTransactionFamilyCode\": \"<string>\",\n      \"externalBankTransactionSubFamilyCode\": \"<string>\",\n      \"mandateReference\": \"<string>\",\n      \"creditorId\": \"<string>\",\n      \"e2eReference\": \"<string>\",\n      \"paymentIdentification\": \"<string>\",\n      \"valueDate\": \"<string>\"\n    },\n    {\n      \"amount\": \"<number>\",\n      \"bookingDate\": \"<string>\",\n      \"currencyCode\": \"XFG\",\n      \"id\": \"<string>\",\n      \"originIban\": \"FU28O8ZG248RWYNIIGPCCR44K9Y4I1C8UM\",\n      \"counterPartyName\": \"<string>\",\n      \"counterPartyIban\": \"YO03ZB3GQCWKKM64Z0A5E1IM36UX\",\n      \"counterPartyBic\": \"WJQUEIOKQ8M\",\n      \"paymentReference\": \"<string>\",\n      \"transactionCode\": \"<string>\",\n      \"externalBankTransactionDomainCode\": \"<string>\",\n      \"externalBankTransactionFamilyCode\": \"<string>\",\n      \"externalBankTransactionSubFamilyCode\": \"<string>\",\n      \"mandateReference\": \"<string>\",\n      \"creditorId\": \"<string>\",\n      \"e2eReference\": \"<string>\",\n      \"paymentIdentification\": \"<string>\",\n      \"valueDate\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unsuccessful operation, returns http status 400. See 'example' property for possible values.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Correlation-Id",
										"value": "<string>",
										"description": "Free form key controlled by the caller e.g. uuid"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/?iban=BR41UNZ9JQ8RCOPDTRR&currencyCode=CQY&bookingDateFrom=<date>&bookingDateTo=<date>&sortBy=bookingDate[ASC]&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "iban",
											"value": "BR41UNZ9JQ8RCOPDTRR",
											"description": "(Required) IBAN representing an account of the current user."
										},
										{
											"key": "currencyCode",
											"value": "CQY",
											"description": "ISO 4217 Alpha 3 currency code."
										},
										{
											"key": "bookingDateFrom",
											"value": "<date>",
											"description": "booking date of original transaction. Date in ISO 8601 format, YYYY-MM-DD. If not provided, 1980-01-01 will be chosen if called with a PSD2-compliant strong customer authentication (SCA), or the date prior to today with a maximum PSD2-compliant daycount if not called with a PSD2-compliant SCA. Please note that choosing a date too far into the past might lead to an error response if the result set would become too big. In this case narrowing the interval can help."
										},
										{
											"key": "bookingDateTo",
											"value": "<date>",
											"description": "booking date until which the transactions to be searched for. Date in ISO 8601 format YYYY-MM-DD. If not provided, the current day will be chosen. bookingDateTo must be greater than or equal to bookingDateFrom."
										},
										{
											"key": "sortBy",
											"value": "bookingDate[ASC]",
											"description": "sort order of transactions - supported sort orders are 'bookingDate[ASC]' or 'bookingDate[DESC]'."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "limit defines count of resources per request/page."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "the page to be returned."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"messageId\": \"<string>\"\n}"
						},
						{
							"name": "Unsuccessful operation, returns http status 401. See 'example' property for possible values.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Correlation-Id",
										"value": "<string>",
										"description": "Free form key controlled by the caller e.g. uuid"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/?iban=BR41UNZ9JQ8RCOPDTRR&currencyCode=CQY&bookingDateFrom=<date>&bookingDateTo=<date>&sortBy=bookingDate[ASC]&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "iban",
											"value": "BR41UNZ9JQ8RCOPDTRR",
											"description": "(Required) IBAN representing an account of the current user."
										},
										{
											"key": "currencyCode",
											"value": "CQY",
											"description": "ISO 4217 Alpha 3 currency code."
										},
										{
											"key": "bookingDateFrom",
											"value": "<date>",
											"description": "booking date of original transaction. Date in ISO 8601 format, YYYY-MM-DD. If not provided, 1980-01-01 will be chosen if called with a PSD2-compliant strong customer authentication (SCA), or the date prior to today with a maximum PSD2-compliant daycount if not called with a PSD2-compliant SCA. Please note that choosing a date too far into the past might lead to an error response if the result set would become too big. In this case narrowing the interval can help."
										},
										{
											"key": "bookingDateTo",
											"value": "<date>",
											"description": "booking date until which the transactions to be searched for. Date in ISO 8601 format YYYY-MM-DD. If not provided, the current day will be chosen. bookingDateTo must be greater than or equal to bookingDateFrom."
										},
										{
											"key": "sortBy",
											"value": "bookingDate[ASC]",
											"description": "sort order of transactions - supported sort orders are 'bookingDate[ASC]' or 'bookingDate[DESC]'."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "limit defines count of resources per request/page."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "the page to be returned."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"messageId\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "{transactionId}",
			"item": [
				{
					"name": "Reads a single transaction by id.",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read_transactions openid",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://simulator-api.db.com:443/gw/oidc/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Correlation-Id",
								"value": "<string>",
								"description": "Free form key controlled by the caller e.g. uuid"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/:transactionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								":transactionId"
							],
							"variable": [
								{
									"key": "transactionId",
									"value": "<string>",
									"description": "(Required) The id of the requested transaction. This id is NOT immutable and is to be used primarily in conjunction with the transaction notification API when requesting a specific transaction."
								}
							]
						},
						"description": "Reads a single transaction by its id."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Correlation-Id",
										"value": "<string>",
										"description": "Free form key controlled by the caller e.g. uuid"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"amount\": \"<number>\",\n  \"bookingDate\": \"<string>\",\n  \"currencyCode\": \"DDF\",\n  \"id\": \"<string>\",\n  \"originIban\": \"PO085D4EH3WZ5\",\n  \"counterPartyName\": \"<string>\",\n  \"counterPartyIban\": \"DV406JT5\",\n  \"counterPartyBic\": \"FGFCTBQT\",\n  \"paymentReference\": \"<string>\",\n  \"transactionCode\": \"<string>\",\n  \"externalBankTransactionDomainCode\": \"<string>\",\n  \"externalBankTransactionFamilyCode\": \"<string>\",\n  \"externalBankTransactionSubFamilyCode\": \"<string>\",\n  \"mandateReference\": \"<string>\",\n  \"creditorId\": \"<string>\",\n  \"e2eReference\": \"<string>\",\n  \"paymentIdentification\": \"<string>\",\n  \"valueDate\": \"<string>\"\n}"
						},
						{
							"name": "Unsuccessful operation, returns http status 400. See 'example' property for possible values.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Correlation-Id",
										"value": "<string>",
										"description": "Free form key controlled by the caller e.g. uuid"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"messageId\": \"<string>\"\n}"
						},
						{
							"name": "Unsuccessful operation, returns http status 401. See 'example' property for possible values.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Correlation-Id",
										"value": "<string>",
										"description": "Free form key controlled by the caller e.g. uuid"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"messageId\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simulator-api.db.com:443/gw/dbapi/banking/transactions/v2"
		}
	]
}