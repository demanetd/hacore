
"""Open Banking Reach + AIS  PIS

# REACH The Reach Directory is used to get the a list of ASPSP's which can be reached for a  specific Service. **Sandbox** The following authorization token can be used to test in the sandbox (unlike a real token this one doesn't expire) 97fb13a74c712d8c7a50476e71769eaf  # AIS There are several possible flows (sequence of API calls) to obtain a consent before Account Information data can be retrieved. Which API's are required depend on the ASPSP (the bank of the PSU) and the chosen strong customer authentication approach. The response of an API call will indicate in the Links section which next API call is required to complete the consent request.  **Sandbox** Several AspspId's are available to test specific account information scenario's, see sandbox     documentation. The following authorization token can be used to test in the sandbox (unlike a real token this one     doesn't expire) **d5bd895a4080dbbb469a207460b6fca**  # PIS There are several flows (sequence of API calls) to complete a payment. Which API's are required depend on the choosen `PaymentProduct`, ASPSP (debtor bank) and the chosen strong customer authentication approach. The response of an API call will indicate in the 'Links' section which next API call is required to complete the payment. Both PSD2 and IDEAL payments are supported. **Sandbox** Several AspspId's are available to test specific PSD2 payment initiation scenario's, see sandbox documentation.  The following authorization token can be used to test in the sandbox (unlike a real token this one doesn't expire): **97fb13a74c712d8c7a50476e71769eaf**   # noqa: E501

OpenAPI spec version: 3.2.0 + 3.6.0 + 3.7.0
    
Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import unittest

from swagger_client.api.account_information_service_api import (
    AccountInformationServiceApi,  # noqa: E501
)


class TestAccountInformationServiceApi(unittest.TestCase):
    """AccountInformationServiceApi unit test stubs"""

    def setUp(self):
        self.api = AccountInformationServiceApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_accounts(self):
        """Test case for accounts

        Lists all accounts that are consented by the PSU for a specific ASPSP  # noqa: E501
        """

    def test_authorisation(self):
        """Test case for authorisation

        Start the authorisation process for a consent  # noqa: E501
        """

    def test_authorisation_update(self):
        """Test case for authorisation_update

        Consent authorisation update  # noqa: E501
        """

    def test_balances(self):
        """Test case for balances

        Get balances for a specific PSU's account  # noqa: E501
        """

    def test_consent_extended(self):
        """Test case for consent_extended

        Initiates the consent request, with additional options  # noqa: E501
        """

    def test_identification(self):
        """Test case for identification

        PSU identification request  # noqa: E501
        """

    def test_revoke(self):
        """Test case for revoke

        Revoke the consent for a specific PSU  # noqa: E501
        """

    def test_status(self):
        """Test case for status

        Get the status of a consent for a specific PSU  # noqa: E501
        """

    def test_transactions(self):
        """Test case for transactions

        Get the list of transactions for a specific PSU's' account  # noqa: E501
        """

    def test_transactionsdownload(self):
        """Test case for transactionsdownload

        Get the list of transactions for a specific PSU's' account as a download  # noqa: E501
        """


if __name__ == '__main__':
    unittest.main()
