openapi: 3.0.0
info:
  title: Open Banking Reach + AIS  PIS
  version: "3.2.0 + 3.6.0 + 3.7.0"
  description: |
    # REACH
    The Reach Directory is used to get the a list of ASPSP's which can be reached for a  specific Service.
    **Sandbox**
    The following authorization token can be used to test in the sandbox (unlike a real token this one doesn't expire) 97fb13a74c712d8c7a50476e71769eaf
    
    # AIS
    There are several possible flows (sequence of API calls) to obtain a consent before Account Information data can be retrieved. Which API's are required depend on the ASPSP (the bank of the PSU) and the chosen strong customer authentication approach. The response of an API call will indicate in the Links section which next API call is required to complete the consent request. 
    **Sandbox**
    Several AspspId's are available to test specific account information scenario's, see sandbox     documentation.
    The following authorization token can be used to test in the sandbox (unlike a real token this one     doesn't expire) **d5bd895a4080dbbb469a207460b6fca**
    
    # PIS
    There are several flows (sequence of API calls) to complete a payment. Which API's are required depend on the choosen `PaymentProduct`, ASPSP (debtor bank) and the chosen strong customer authentication approach. The response of an API call will indicate in the 'Links' section which next API call is required to complete the payment. Both PSD2 and IDEAL payments are supported.
    **Sandbox**
    Several AspspId's are available to test specific PSD2 payment initiation scenario's, see sandbox documentation.

    The following authorization token can be used to test in the sandbox (unlike a real token this one doesn't expire): **97fb13a74c712d8c7a50476e71769eaf**

  x-tpp-buildversion: '1.27'
servers:
  - url: https://xs2a.awltest.de/xs2a/routingservice/services/
    description: Sandbox

paths:
  /directory/v3/aspsps:
    get:
      security:
        - Authorization: []
      tags:
      - Reach Directory
      summary: Get list of ASPSPs reachable with our Open Banking Services
      operationId: reach
      parameters:
      - $ref: '#/components/parameters/country'
      - $ref: '#/components/parameters/allDetails'
      - $ref: '#/components/parameters/allOptions'
      - $ref: '#/components/parameters/categoryLabel'
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/MessageCreateDateTime'
      - $ref: '#/components/parameters/Service'
      - $ref: '#/components/parameters/allAspspSpecificFields'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReachDirectoryResponse'
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
        400:
          description: |
            Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error2'
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
        401:
          description: |
            Missing or wrong IP Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error2'
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
        403:
          description: |
            Expired IP Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error2'
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
        404:
          description: |
            No ASPSP found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error2'
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
        500:
          description: |
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error2'
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
              
  /ob/ais/v3/psus/{psuId}/consents:
    post:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Initiates the consent request, with additional options
      operationId: consent extended
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyNotificationUrl'
        - $ref: '#/components/parameters/NotificationVersion'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/AppRedirectPreferred'
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/LastLogin'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/PsuIpPort'
        - $ref: '#/components/parameters/HttpMethod'
        - $ref: '#/components/parameters/HttpHeaderUserAgent'
        - $ref: '#/components/parameters/HttpHeaderReferer'
        - $ref: '#/components/parameters/HttpHeaderAccept'
        - $ref: '#/components/parameters/HttpHeaderAcceptCharset'
        - $ref: '#/components/parameters/HttpHeaderAcceptEncoding'
        - $ref: '#/components/parameters/HttpHeaderAcceptLanguage'
        - $ref: '#/components/parameters/DeviceId'
        - $ref: '#/components/parameters/GeoLocation'
        - $ref: '#/components/parameters/UseImplicitPreAuthCombined'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentRequest'
        required: false
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
      x-codegen-request-body-name: body
  /ob/ais/v3/psus/{psuId}/consents/{consentId}/identification:
    post:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: PSU identification request
      description: |
        Use this operation to identify a PSU in a decoupled approach.
      operationId: identification
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/ConsentId'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentIdentificationRequest'
      responses:
        201:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentIdentificationResponse'
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
  /ob/ais/v3/psus/{psuId}/consents/{consentId}/authorisations:
    post:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Start the authorisation process for a consent
      description:
        Use this operation to authorize a PSU in multilevel authorization
        approach.
      operationId: authorisation
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/ConsentId'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentAuthorisationRequest'
        required: false
      responses:
        201:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentAuthorisationResponse'
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
      x-codegen-request-body-name: body
  /ob/ais/v3/psus/{psuId}/consents/{consentId}/authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Consent authorisation update
      description: |
        Use this operation to update the authorization.
      operationId: authorisationUpdate
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/ConsentId'
        - $ref: '#/components/parameters/AuthorisationId'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentAuthorisationUpdateRequest'
        required: false
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentAuthorisationUpdateResponse'
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
      x-codegen-request-body-name: body
  /ob/ais/v3/psus/{psuId}/consents/{consentId}/status:
    get:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Get the status of a consent for a specific PSU
      operationId: status
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/ConsentId'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentDetailedInformation'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
  /ob/ais/v3/psus/{psuId}/consents/{consentId}:
    delete:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Revoke the consent for a specific PSU
      operationId: revoke
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/ConsentId'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      responses:
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
  /ob/ais/v3/psus/{psuId}/aspsps/{aspspId}/accounts:
    get:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Lists all accounts that are consented by the PSU for a specific ASPSP
      operationId: accounts
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/AspspId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/TotalPages'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        410:
          $ref: '#/components/responses/410'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
  /ob/ais/v3/psus/{psuId}/aspsps/{aspspId}/accounts/{accountId}/balances:
    get:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Get balances for a specific PSU's account
      operationId: balances
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/AspspId'
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/TotalPages'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBalancesResponse'
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        410:
          $ref: '#/components/responses/410'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
  /ob/ais/v3/psus/{psuId}/aspsps/{aspspId}/accounts/{accountId}/transactions:
    get:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Get the list of transactions for a specific PSU's' account
      operationId: transactions
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/AspspId'
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/DateFrom'
        - $ref: '#/components/parameters/DateTo'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/TotalPages'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionsResponse'
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          description: Bad Request
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          $ref: '#/components/responses/401'
        403:
          description: Expired IP Token
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          $ref: '#/components/responses/404'
        410:
          $ref: '#/components/responses/410'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
  /ob/ais/v3/download/psus/{psuId}/aspsps/{aspspId}/accounts/{accountId}/transactions:
    get:
      security:
        - Authorization: []
      tags:
        - Account Information Service
      summary: Get the list of transactions for a specific PSU's' account as a download
      operationId: transactionsdownload
      parameters:
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/AspspId'
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/Dl'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/PsuIpAddress'
      responses:
        200:
          description: |
            Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionsResponse'
        204:
          description: |
            No content
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content: {}
        400:
          description: |
            Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            Missing or wrong IP Token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: |
            Expired IP Token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            Not Found, resource at TPP not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        410:
          description: |
            Pagination resource timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        502:
          description: |
            Bad Gateway, connection to ASPSP failed or token to ASPSP
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: |
            Service Unavailable, too many request to the ASPSP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        511:
          description: |
            Network Authentication Required, authentication to ASPSP failed
            .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ob/ais/v3/register:
    post:
      security:
        - Authorization: []
      tags:
        - Account Information Service (Extended Service)
      summary: POST a new registration resource for a specific product.
      description: 'The available products utilize the PSUs AIS consent.'
      operationId: registration
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRegistrationRequest'
      responses:
        201:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRegistrationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'

  /ob/ais/v3/register/{registrationId}/initialisation/{psuId}:
    post:
      security:
        - Authorization: []
      tags:
        - Account Information Service (Extended Service)
      summary: Get the link to the IS for the consent authorisation
      operationId: post consent authorisation
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/RegistrationId'
        - $ref: '#/components/parameters/PsuId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitialisationRequest'
      responses:
        201:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitialisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
  /ob/ais/v3/register/{registrationId}:
    put:
      security:
        - Authorization: []
      tags:
        - Account Information Service (Extended Service)
      summary: Update an existing registration for the PSU
      description: ''
      operationId: put registration
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/RegistrationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRegistrationRequest'
      responses:
        204:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
    delete:
      security:
        - Authorization: []
      tags:
        - Account Information Service (Extended Service)
      summary: Delete an existing registration
      description: ''
      operationId: delete registration
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/RegistrationId'
      responses:
        204:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
  /ob/ais/v3/register/{registrationId}/status:
    get:
      security:
        - Authorization: []
      tags:
        - Account Information Service (Extended Service)
      summary: Get an existing registration status
      description: ''
      operationId: get registration status
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/RegistrationId'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegistrationResponseStatus'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'

  /ob/pis/v3/payments:
    post:
      security:
        - Authorization: []
      tags:
        - Payment Initiation Service
      summary: Payment initiation request
      description: |
        Use this operation to initiate a payment on behalf of the Payment
        Service User. Strong customer authentication might be required by the ASPSP,
        the response will indicate which step is required to complete the payment.
      operationId: paymentInitiate
      parameters:
        - $ref: '#/components/parameters/confirmForNotification'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyNotificationUrl'
        - $ref: '#/components/parameters/NotificationVersion'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/AppRedirectPreferred'
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/LastLogin'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/PsuIpPort'
        - $ref: '#/components/parameters/HttpMethod'
        - $ref: '#/components/parameters/HttpHeaderUserAgent'
        - $ref: '#/components/parameters/HttpHeaderReferer'
        - $ref: '#/components/parameters/HttpHeaderAccept'
        - $ref: '#/components/parameters/HttpHeaderAcceptCharset'
        - $ref: '#/components/parameters/HttpHeaderAcceptEncoding'
        - $ref: '#/components/parameters/HttpHeaderAcceptLanguage'
        - $ref: '#/components/parameters/DeviceId'
        - $ref: '#/components/parameters/GeoLocation'
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Digest"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInitiationRequest'
            examples:
              PSD2-SCT - Example request:
                value:
                  {
                    "PaymentProduct": [
                      "PSD2-SCT"
                    ],
                    "PsuData": {
                      "AspspId": "20100"
                    },
                    "CommonPaymentData": {
                      "EndToEndId": "ID-0123456789",
                      "InitiatingPartyReferenceId": "Ref-992098126",
                      "PreferredScaMethod": [
                        "Redirect"
                      ],
                      "Amount": {
                        "Amount": "123.45",
                        "Currency": "EUR"
                      },
                      "DebtorInformation": {
                        "Name": "Bob Smith",
                        "Agent": "8QB2EN7P",
                        "Account": {
                          "SchemeName": "IBAN",
                          "Identification": "DE89370400440532013000",
                          "Currency": "EUR"
                        },
                      },
                      "RemittanceInformation": "Remittance Information",
                    }
                  }
              PSD2-SCT - Minimal set of fields which will work for the majority of ASPSP's:
                value:
                  {
                    "PaymentProduct": [
                      "PSD2-SCT"
                    ],
                    "PsuData": {
                      "AspspId": "20100"
                    },
                    "CommonPaymentData": {
                      "EndToEndId": "ID-7853389",
                      "InitiatingPartyReferenceId": "Ref-88276166",
                      "Amount": {
                        "Amount": "1.00",
                        "Currency": "EUR"
                      },
                      "DebtorInformation": {
                        "Name": "Juno Smith"
                      },
                      "RemittanceInformation": "Remittance Information"
                    }
                  }              
              IDEAL - Example request:
                value:
                  {
                    "PaymentProduct": [
                      "IDEAL"
                    ],
                    "CommonPaymentData": {
                      "Amount": {
                        "Type": "Fixed",
                        "Amount": "20.45",
                        "Currency": "EUR"
                      },
                      "RemittanceInformation": "Cookie",
                      "RemittanceInformationStructured": {"Reference": "iDEALpurchase21"}
                    },
                    "IDEALPayments": {
                      "UseDebtorToken": false,
                      "FlowType": "Standard"
                    }
                  }
        required: false
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
      x-codegen-request-body-name: body

  /ob/pis/v3/payments/{paymentId}/status:
    get:
      security:
        - Authorization: []
      tags:
        - Payment Initiation Service
      summary: Status of the payment request
      description: |
        Use this operation to retrieve the status of a payment.
      operationId: paymentStatus
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/confirm'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Digest'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailedInformation'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}/confirmation:
    post:
      security:
        - Authorization: []
      summary: Confirmation of the payment request by the PISP
      tags:
        - Payment Initiation Service
      description: |
        This API is used to confirm a payment. Confirmation is required
        when the link 'ConfirmationRequired' is returned. Confirmation of a payment can
        be required in two cases 1) When its required by the ASPSP standard 2) when
        a payment fee is involved.
      operationId: paymentConfirmation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfirmationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}/identification:
    post:
      security:
        - Authorization: []
      summary: Payment identification request
      tags:
        - Payment Initiation Service
      description: |
        Use this operation to identify a PSU in decoupled approach. The
        response of the post payments api will provide a link to this api in the 'PostIdentificationForDecoupled'
        field if this step is required.
      operationId: paymentIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}/authorisations:
    post:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Payment Initiation Service
      description: |
        Use this operation to authorise a PSU explicitly. This has to be used if multiple PSU's have to authorise
        the payment. Background information: If only one PSU has to authorise, this step is started implicitly by
        the post payments api.
      operationId: paymentAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}/authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Payment Initiation Service
      description: |
        Use this operation to change the authorisation resource.
      operationId: paymentAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}:
    delete:
      security:
        - Authorization: []
      summary: Payment cancellation request
      tags:
        - Payment Initiation Service
      description: |
        Use this operation to cancel a payment on behalf of the
        Payment Service User. Strong Customer Authentication might be required by
        the ASPSP, the response will indicate which step is required to complete the cancellation.
      operationId: paymentCancellation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/AspspPsuId'
        - $ref: '#/components/parameters/AspspPsuIdType'
        - $ref: '#/components/parameters/AspspPsuCorporateId'
        - $ref: '#/components/parameters/AspspPsuCorporateIdType'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/PsuIpAddress'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCancellationResponse'
        204:
          $ref: '#/components/responses/204'
        405:
          $ref: '#/components/responses/405'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}/cancellation-identification:
    post:
      security:
        - Authorization: []
      summary: Payment cancellation identification request
      tags:
        - Payment Initiation Service
      description: |
        Use this operation to identify a Payment Service User in a decoupled approach.
      operationId: paymentCancellationIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}/cancellation-authorisations:
    post:
      security:
        - Authorization: []
      tags:
        - Payment Initiation Service
      summary: Payment cancellation authorisation request
      description: |
        Use this operation to authorise a Payment Service User (PSU) explicitly.
      operationId: paymentCancellationAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/payments/{paymentId}/cancellation-authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      tags:
        - Payment Initiation Service
      summary: Payment cancellation authorisation request update
      description: |
        Use this operation to update the authorisation resource.
      operationId: paymentCancellationAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments:
    post:
      security:
        - Authorization: []
      tags:
        - Periodic Payment Initiation Service (Extended service)
      summary: Payment initiation request
      description: |
        Use this operation to initiate a payment on behalf of the Payment
        Service User. Strong customer authentication might be required by the ASPSP,
        the response will indicate which step is required to complete the payment.
      operationId: periodicPaymentInitiate
      parameters:
        - $ref: '#/components/parameters/confirmForNotification'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/AppRedirectPreferred'
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/LastLogin'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/PsuIpPort'
        - $ref: '#/components/parameters/HttpMethod'
        - $ref: '#/components/parameters/HttpHeaderUserAgent'
        - $ref: '#/components/parameters/HttpHeaderReferer'
        - $ref: '#/components/parameters/HttpHeaderAccept'
        - $ref: '#/components/parameters/HttpHeaderAcceptCharset'
        - $ref: '#/components/parameters/HttpHeaderAcceptEncoding'
        - $ref: '#/components/parameters/HttpHeaderAcceptLanguage'
        - $ref: '#/components/parameters/DeviceId'
        - $ref: '#/components/parameters/GeoLocation'
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Digest"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicPaymentInitiationRequest'
            examples:
              PSD2-SCT - Example request:
                value:
                  {
                    "PaymentProduct": [
                      "PSD2-SCT"
                    ],
                    "PsuData": {
                      "AspspId": "20220"
                    },
                    "CommonPaymentData": {
                      "EndToEndId": "ID-0123456789",
                      "PreferredScaMethod": [
                        "Redirect"
                      ],
                      "Amount": {
                        "Amount": "67.45",
                        "Currency": "EUR"
                      },
                      "DebtorInformation": {
                        "Name": "John Smith",
                        "Agent": "8QB2EN7P",
                        "Account": {
                          "SchemeName": "IBAN",
                          "Identification": "DE89370400440532013000",
                          "Currency": "EUR"
                        },
                      },
                      "RemittanceInformation": "Remittance Information",
                      "PeriodRules": {
                        "StartDateTime": "2022-10-25T08:15:00.856Z",
                        "Frequency" : "MNTH"
                      }
                    }
                  }
        required: false
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
      x-codegen-request-body-name: body

  /ob/pis/v3/periodic-payments/{paymentId}/status:
    get:
      security:
        - Authorization: []
      tags:
        - Periodic Payment Initiation Service (Extended service)
      summary: Status of the payment request
      description: |
        Use this operation to retrieve the status of a payment.
      operationId: periodicPaymentStatus
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/confirm'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Digest'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailedInformation'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}/confirmation:
    post:
      security:
        - Authorization: []
      summary: Confirmation of the payment request by the PISP
      tags:
        - Periodic Payment Initiation Service (Extended service)
      description: |
        This Api is used to confirm a payment. Confirmation is required
        when the link 'ConfirmationRequired' is returned. Confirmation of a payment can
        be required in two cases 1) When its required by the ASPSP standard 2) when
        a payment fee is involved.
      operationId: periodicPaymentConfirmation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfirmationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}/identification:
    post:
      security:
        - Authorization: []
      summary: Payment identification request
      tags:
        - Periodic Payment Initiation Service (Extended service)
      description: |
        Use this operation to identify a PSU in decoupled approach. The
        response of the post payments api will provide a link to this api in the 'PostIdentificationForDecoupled'
        field if this step is required.
      operationId: PeriodicPaymentIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}/authorisations:
    post:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Periodic Payment Initiation Service (Extended service)
      description: |
        Use this operation to authorise a PSU explicitly. This has to be used if multiple PSU's have to authorise
        the payment. Background information: If only one PSU has to authorise, this step is started implicitly by
        the post payments api.
      operationId: periodicPaymentAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}/authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Periodic Payment Initiation Service (Extended service)
      description: |
        Use this operation to change the authorisation resource.
      operationId: periodicPaymentAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}:
    delete:
      security:
        - Authorization: []
      summary: Payment cancellation request
      tags:
        - Periodic Payment Initiation Service (Extended service)
      description: |
        Use this operation to cancel a payment on behalf of the
        Payment Service User. Strong Customer Authentication might be required by
        the ASPSP, the response will indicate which step is required to complete the
        cancellation.
      operationId: periodicPaymentCancellation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/AspspPsuId'
        - $ref: '#/components/parameters/AspspPsuIdType'
        - $ref: '#/components/parameters/AspspPsuCorporateId'
        - $ref: '#/components/parameters/AspspPsuCorporateIdType'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/PsuIpAddress'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCancellationResponse'
        204:
          $ref: '#/components/responses/204'
        405:
          $ref: '#/components/responses/405'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}/cancellation-identification:
    post:
      security:
        - Authorization: []
      summary: Payment cancellation identification request
      tags:
        - Periodic Payment Initiation Service (Extended service)
      description: |
        Use this operation to identify a PSU in decoupled approach.
      operationId: periodicPaymentCancellationIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}/cancellation-authorisations:
    post:
      security:
        - Authorization: []
      tags:
        - Periodic Payment Initiation Service (Extended service)
      summary: Payment cancellation authorisation request
      description: |
        Use this operation to authorise a PSU explicitly.
      operationId: periodicPaymentCancellationAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/periodic-payments/{paymentId}/cancellation-authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      tags:
        - Periodic Payment Initiation Service (Extended service)
      summary: Payment cancellation authorisation request update
      description: |
        Use this operation to update the authorisation resource.
      operationId: periodicPaymentCancellationAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments:
    post:
      security:
        - Authorization: []
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      summary: Payment initiation request
      description: |
        Use this operation to initiate a payment on behalf of the Payment
        Service User. Strong customer authentication might be required by the ASPSP,
        the response will indicate which step is required to complete the payment.
      operationId: scheduledPaymentInitiate
      parameters:
        - $ref: '#/components/parameters/confirmForNotification'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/AppRedirectPreferred'
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/LastLogin'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/PsuIpPort'
        - $ref: '#/components/parameters/HttpMethod'
        - $ref: '#/components/parameters/HttpHeaderUserAgent'
        - $ref: '#/components/parameters/HttpHeaderReferer'
        - $ref: '#/components/parameters/HttpHeaderAccept'
        - $ref: '#/components/parameters/HttpHeaderAcceptCharset'
        - $ref: '#/components/parameters/HttpHeaderAcceptEncoding'
        - $ref: '#/components/parameters/HttpHeaderAcceptLanguage'
        - $ref: '#/components/parameters/DeviceId'
        - $ref: '#/components/parameters/GeoLocation'
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Digest"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledPaymentInitiationRequest'
            examples:
              PSD2-SCT - Example request:
                value:
                  {
                    "PaymentProduct": [
                      "PSD2-SCT"
                    ],
                    "PsuData": {
                      "AspspId": "20111"
                    },
                    "CommonPaymentData": {
                      "EndToEndId": "ID-0123456789",
                      "PreferredScaMethod": [
                        "Redirect"
                      ],
                      "Amount": {
                        "Amount": "123.45",
                        "Currency": "EUR"
                      },
                      "DebtorInformation": {
                        "Name": "Peter Smith",
                        "Agent": "8QB2EN7P",
                        "Account": {
                          "SchemeName": "IBAN",
                          "Identification": "DE89370400440532013000",
                          "Currency": "EUR"
                        },
                      },
                      "RemittanceInformation": "Remittance Information",
                      "RequestedExecutionDate": "2021-12-08T07:01:57.587Z"
                    }
                  }
        required: false
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
      x-codegen-request-body-name: body

  /ob/pis/v3/scheduled-payments/{paymentId}/status:
    get:
      security:
        - Authorization: []
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      summary: Status of the payment request
      description: |
        Use this operation to retrieve the status of a payment.
      operationId: scheduledPaymentStatus
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/confirm'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Digest'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailedInformation'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}/confirmation:
    post:
      security:
        - Authorization: []
      summary: Confirmation of the payment request by the PISP
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      description: |
        This Api is used to confirm a payment. Confirmation is required
        when the link 'ConfirmationRequired' is returned. Confirmation of a payment can
        be required in two cases 1) When its required by the ASPSP standard 2) when
        a payment fee is involved.
      operationId: scheduledPaymentConfirmation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfirmationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}/identification:
    post:
      security:
        - Authorization: []
      summary: Payment identification request
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      description: |
        Use this operation to identify a PSU in decoupled approach. The
        response of the post payments api will provide a link to this api in the 'PostIdentificationForDecoupled'
        field if this step is required.
      operationId: scheduledPaymentIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}/authorisations:
    post:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      description: |
        Use this operation to authorise a PSU explicitly. This has to be used if multiple PSU's have to authorise
        the payment. Background information: If only one PSU has to authorise, this step is started implicitly by
        the post scheduled-payments api.
      operationId: scheduledPaymentAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}/authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      description: |
        Use this operation to change the authorisation resource.
      operationId: scheduledPaymentAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}:
    delete:
      security:
        - Authorization: []
      summary: Payment cancellation request
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      description: |
        Use this operation to cancel a payment on behalf of the
        Payment Service User. Strong Customer Authentication might be required by
        the ASPSP, the response will indicate which step is required to complete the
        cancellation.
      operationId: scheduledPaymentCancellation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/AspspPsuId'
        - $ref: '#/components/parameters/AspspPsuIdType'
        - $ref: '#/components/parameters/AspspPsuCorporateId'
        - $ref: '#/components/parameters/AspspPsuCorporateIdType'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/PsuIpAddress'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCancellationResponse'
        204:
          $ref: '#/components/responses/204'
        405:
          $ref: '#/components/responses/405'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}/cancellation-identification:
    post:
      security:
        - Authorization: []
      summary: Payment cancellation identification request
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      description: |
        Use this operation to identify a PSU in decoupled approach.
      operationId: scheduledPaymentCancellationIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}/cancellation-authorisations:
    post:
      security:
        - Authorization: []
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      summary: Payment cancellation authorisation request
      description: |
        Use this operation to authorise a PSU explicitly.
      operationId: scheduledPaymentCancellationAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/scheduled-payments/{paymentId}/cancellation-authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      tags:
        - Scheduled Payment Initiation Service (Extended service)
      summary: Payment cancellation authorisation request update
      description: |
        Use this operation to update the authorisation resource.
      operationId: scheduledPaymentCancellationAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments:
    post:
      security:
        - Authorization: []
      tags:
        - Bulk Payment Initiation Service (Extended service)
      summary: Payment initiation request
      description: |
        Use this operation to initiate a payment on behalf of the Payment
        Service User. Strong customer authentication might be required by the ASPSP,
        the response will indicate which step is required to complete the payment.
      operationId: bulkPaymentInitiate
      parameters:
        - $ref: '#/components/parameters/confirmForNotification'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/AppRedirectPreferred'
        - $ref: '#/components/parameters/PsuId'
        - $ref: '#/components/parameters/LastLogin'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/PsuIpPort'
        - $ref: '#/components/parameters/HttpMethod'
        - $ref: '#/components/parameters/HttpHeaderUserAgent'
        - $ref: '#/components/parameters/HttpHeaderReferer'
        - $ref: '#/components/parameters/HttpHeaderAccept'
        - $ref: '#/components/parameters/HttpHeaderAcceptCharset'
        - $ref: '#/components/parameters/HttpHeaderAcceptEncoding'
        - $ref: '#/components/parameters/HttpHeaderAcceptLanguage'
        - $ref: '#/components/parameters/DeviceId'
        - $ref: '#/components/parameters/GeoLocation'
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Digest"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPaymentInitiationRequest'
            examples:
              PSD2-SCT - Example request:
                value:
                  {
                    "PaymentProduct": [
                      "PSD2-SCT"
                    ],
                    "PaymentProductChangeable": false,
                    "PsuData": {
                      "AspspId": "20210",
                      "AspspProductCode": "string",
                      "Country": "FR"
                    },
                    "CommonPaymentData": {
                      "PreferredScaMethod": [
                        "Redirect"
                      ],
                      "DebtorInformation": {
                        "Name": "Rob Smith",
                        "Agent": "EG8BCROZMX8",
                        "Account": {
                          "SchemeName": "IBAN",
                          "Identification": "DE89370400440532013000",
                          "Currency": "EUR"
                        },
                      },
                      "ChargeBearer": "DEBT",
                      "Payments": [
                      {
                        "EndToEndId": "ID-0123456789-A",
                        "Amount": {
                          "Amount": "123.45",
                          "Currency": "EUR"
                        },
                        "CreditorInformation": {
                          "Name": "John Smith",
                          "Account": {
                            "SchemeName": "IBAN",
                            "Identification": "DE89370400440532013012",
                            "Currency": "EUR"
                          },
                          "Agent": "UZWHIKRXVHT",
                          "UltimateCreditor": "Jhon Media Shop U",
                        },
                        "RemittanceInformation": "Remittance Information",
                        "RemittanceInformationStructured": {
                          "Reference": "Remit-23-43-42",
                          "ReferenceType": "structured",
                          "ReferenceIssuer": "Reference Issuer"
                        }
                      },
                      {
                        "EndToEndId": "ID-0123456789-B",
                        "Amount": {
                          "Amount": "78.56",
                          "Currency": "EUR"
                        },
                        "CreditorInformation": {
                          "Name": "Simon Walker",
                          "Account": {
                            "SchemeName": "IBAN",
                            "Identification": "NL98INGB6709624056",
                            "Currency": "EUR"
                          },
                        },
                        "RemittanceInformation": "Remittance Information",
                      }
                      ]
                    }
                  }
        required: false
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'
      x-codegen-request-body-name: body

  /ob/pis/v3/bulk-payments/{paymentId}/status:
    get:
      security:
        - Authorization: []
      tags:
        - Bulk Payment Initiation Service (Extended service)
      summary: Status of the payment request
      description: |
        Use this operation to retrieve the status of a payment.
      operationId: bulkPaymentStatus
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/confirm'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Digest'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailedInformation'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}/confirmation:
    post:
      security:
        - Authorization: []
      summary: Confirmation of the payment request by the PISP
      tags:
        - Bulk Payment Initiation Service (Extended service)
      description: |
        This Api is used to confirm a payment. Confirmation is required
        when the link 'ConfirmationRequired' is returned. Confirmation of a payment can
        be required in two cases 1) When its required by the ASPSP standard 2) when
        a payment fee is involved.
      operationId: bulkPaymentConfirmation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfirmationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}/identification:
    post:
      security:
        - Authorization: []
      summary: Payment identification request
      tags:
        - Bulk Payment Initiation Service (Extended service)
      description: |
        Use this operation to identify a PSU in decoupled approach. The
        response of the post payments api will provide a link to this api in the 'PostIdentificationForDecoupled'
        field if this step is required.
      operationId: bulkPaymentIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}/authorisations:
    post:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Bulk Payment Initiation Service (Extended service)
      description: |
        Use this operation to authorise a PSU explicitly. This has to be used if multiple PSU's have to authorise
        the payment. Background information: If only one PSU has to authorise, this step is started implicitly by
        the post bulk-payments api.
      operationId: bulkPaymentAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}/authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      summary: Payment authorisation request
      tags:
        - Bulk Payment Initiation Service (Extended service)
      description: |
        Use this operation to change the authorisation resource.
      operationId: bulkPaymentAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}:
    delete:
      security:
        - Authorization: []
      summary: Payment cancellation request
      tags:
        - Bulk Payment Initiation Service (Extended service)
      description: |
        Use this operation to cancel a payment on behalf of the
        Payment Service User. Strong Customer Authentication might be required by
        the ASPSP, the response will indicate which step is required to complete the
        cancellation.
      operationId: bulkPaymentCancellation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/AspspPsuId'
        - $ref: '#/components/parameters/AspspPsuIdType'
        - $ref: '#/components/parameters/AspspPsuCorporateId'
        - $ref: '#/components/parameters/AspspPsuCorporateIdType'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/PsuIpAddress'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCancellationResponse'
        204:
          $ref: '#/components/responses/204'
        405:
          $ref: '#/components/responses/405'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}/cancellation-identification:
    post:
      security:
        - Authorization: []
      summary: Payment cancellation identification request
      tags:
        - Bulk Payment Initiation Service (Extended service)
      description: |
        Use this operation to identify a PSU in decoupled approach.
      operationId: bulkPaymentCancellationIdentification
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}/cancellation-authorisations:
    post:
      security:
        - Authorization: []
      tags:
        - Bulk Payment Initiation Service (Extended service)
      summary: Payment cancellation authorisation request
      description: |
        Use this operation to authorise a PSU explicitly.
      operationId: bulkPaymentCancellationAuthorisation
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
      responses:
        201:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/bulk-payments/{paymentId}/cancellation-authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      tags:
        - Bulk Payment Initiation Service (Extended service)
      summary: Payment cancellation authorisation request update
      description: |
        Use this operation to update the authorisation resource.
      operationId: bulkPaymentCancellationAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/paymentId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/refunds:
    post:
      security:
        - Authorization: []
      tags:
        - Refund Initiation Service V3 (Extended services)
      summary: Refund initiation request
      description: |
        Use this operation to initiate an order for refunds containing
        more than 1 refund instruction.
      operationId: refundInitiate
      parameters:
        - $ref: '#/components/parameters/confirmForNotification'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/UseAuthorisationLandingPages'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/LastLogin'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/PsuIpPort'
        - $ref: '#/components/parameters/HttpMethod'
        - $ref: '#/components/parameters/HttpHeaderUserAgent'
        - $ref: '#/components/parameters/HttpHeaderReferer'
        - $ref: '#/components/parameters/HttpHeaderAccept'
        - $ref: '#/components/parameters/HttpHeaderAcceptCharset'
        - $ref: '#/components/parameters/HttpHeaderAcceptEncoding'
        - $ref: '#/components/parameters/HttpHeaderAcceptLanguage'
        - $ref: '#/components/parameters/DeviceId'
        - $ref: '#/components/parameters/GeoLocation'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundInitiationRequest'
        required: false
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundInitiationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/refunds/{refundId}/status:
    get:
      security:
        - Authorization: []
      tags:
        - Refund Initiation Service V3 (Extended services)
      summary: Status of the refund
      description: |
        Use this operation to retrieve the status of a refund.
      operationId: refundStatus
      parameters:
        - $ref: '#/components/parameters/refundId'
        - $ref: '#/components/parameters/confirm'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/PsuIpAddress'
      responses:
        200:
          description: |
            Successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            AspspScaApproach:
              $ref: '#/components/headers/AspspScaApproach'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundStatusResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/refunds/{refundId}/confirmation:
    post:
      security:
        - Authorization: []
      tags:
        - Refund Initiation Service V3 (Extended services)
      summary: Confirmation of the refund request by the PISP
      description: |
        This API is used to confirm a refund, confirmation is required
        when the link 'ConfirmationRequired' is returned.
      operationId: refundConfirmation
      parameters:
        - $ref: '#/components/parameters/refundId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/InitiatingPartyReturnUrl'
        - $ref: '#/components/parameters/LastLogin'
        - $ref: '#/components/parameters/PsuIpAddress'
        - $ref: '#/components/parameters/PsuIpPort'
        - $ref: '#/components/parameters/HttpMethod'
        - $ref: '#/components/parameters/HttpHeaderUserAgent'
        - $ref: '#/components/parameters/HttpHeaderReferer'
        - $ref: '#/components/parameters/HttpHeaderAccept'
        - $ref: '#/components/parameters/HttpHeaderAcceptCharset'
        - $ref: '#/components/parameters/HttpHeaderAcceptEncoding'
        - $ref: '#/components/parameters/HttpHeaderAcceptLanguage'
        - $ref: '#/components/parameters/DeviceId'
        - $ref: '#/components/parameters/GeoLocation'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationRequest'
        required: false
      responses:
        200:
          description: |
            OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundConfirmationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/refunds/{refundId}/identification:
    post:
      security:
        - Authorization: []
      tags:
        - Refund Initiation Service V3 (Extended services)
      summary: Refund identification request
      description: |
        Use this operation to identify a PSU in decoupled approach. The
        response of the post refunds API will provide a link to this api in the 'PostIdentificationForDecoupled'
        field if this step is required.
      operationId: refundIdentification
      parameters:
        - $ref: '#/components/parameters/refundId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIdentificationRequest'
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundIdentificationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/refunds/{refundId}/authorisations:
    post:
      security:
        - Authorization: []
      tags:
        - Refund Initiation Service V3 (Extended services)
      summary: Refund authorisation request
      description: |
        Use this operation to authorise a refund explicitly.
      operationId: refundAuthorisation
      parameters:
        - $ref: '#/components/parameters/refundId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        description: |
          Description of request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
        required: false
      responses:
        201:
          description: |
            Created
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/refunds/{refundId}/authorisations/{authorisationId}:
    put:
      security:
        - Authorization: []
      tags:
        - Refund Initiation Service V3 (Extended services)
      summary: Refund authorisation request
      description: |
        Use this operation to change the authorisation resource.
      operationId: refundAuthorisationUpdate
      parameters:
        - $ref: '#/components/parameters/refundId'
        - $ref: '#/components/parameters/authorisationId'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationUpdateRequest'
        required: false
      responses:
        200:
          description: |
            Updated
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundAuthorisationResponse'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503'
        511:
          $ref: '#/components/responses/511'

  /ob/pis/v3/preferences/{Psuid}/:
    get:
      security:
        - Authorization: []
      tags:
        - Debtor Preference Retrieval
      description: |
        Currently could be used only for iDEAL 2.0 payments
      summary: Get PSU preferred bank and preferred account
      operationId: getAllPsuBanksWithAccounts
      parameters:
        - $ref: '#/components/parameters/Psuid'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/MessageCreateDateTime'
        - $ref: '#/components/parameters/Signature'
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/AspspId"
        - $ref: "#/components/parameters/InitiatingPartySubId"
      responses:
        200:
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            MessageCreateDateTime:
              $ref: '#/components/headers/MessageCreateDateTime'
            Signature:
              $ref: '#/components/headers/Signature'
            Digest:
              $ref: '#/components/headers/Digest'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsuBankPreferences'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Missing or wrong IP Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Expired IP Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          $ref: '#/components/responses/404'
        415:
          $ref: '#/components/responses/415'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      
  schemas:
    ASPSP:
      required:
      - AspspId
      - Name
      type: object
      properties:
        AspspId:
          maxLength: 35
          minLength: 1
          type: string
          description: Id of the ASPSP used within the Open Banking Service, to be used in other API’s to identify the ASPSP
        Name:
          type: array
          items:
            $ref: '#/components/schemas/NameLabel'
        BIC:
          pattern: '[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}'
          type: string
          description: BIC of the ASPSP
        Country:
          $ref: '#/components/schemas/Country'
        CategoryLabel:
          type: array
          items:
            maxLength: 255
            minLength: 0
            type: string
            description: Labels to identify categories e.g. Retail or Corporate
        Details:
          type: array
          description: This block only shows when query parameter allDetails = true
          items:
            $ref: '#/components/schemas/DetailsType'
        Options:
          type: array
          description: List of directory service options for the given ASPSP
          items:
            $ref: '#/components/schemas/OptionType'
        GroupId:
          type: string
          description: An id referencing a group this ASPSP is part of.
          maxLength: 255
        AspspSpecificLabels:
          type: array
          description: List of Specific Labels for the given ASPSP
          items:
            $ref: '#/components/schemas/AspspSpecificLabel'
    Group:
      required:
        - GroupId
        - Name
      type: object
      properties:
        GroupId:
          type: string
          description: The id of this group
          maxLength: 255
        Name:
          type: array
          items:
            $ref: '#/components/schemas/NameLabel'

    ReachDirectoryResponse:
        type: object
        required:
          - ASPSP
          - Service
          - Groups
        properties:
          Service:
            maxLength: 35
            minLength: 1
            type: string
            description: |
              The name of the service the ASPSPs are listed for.
          ASPSP:
            type: array
            items:
              $ref: '#/components/schemas/ASPSP'
          Groups:
            type: array
            description: A list of ASPSP groups. An ASPSP may belong to one or no group.
            items:
              $ref: '#/components/schemas/Group'
        description: |
          Reach Directory Response
          
    DetailsType:
      required:
      - Api
      type: object
      properties:
        Api:
          type: string
          description: |
            Indicates for which of our Open Banking Service APIs this is applicable.
            The value is composed of the http method and the URL. The star character
            '*' can be used as a wildcard. Below three examples:
            - POST /v3/payments 
            - '*' /v3/payments    - all http methods
            - GET '*'             - all urls called with GET
          example: "POST /v3/payments "
        Fieldname:
          type: string
          description: The name of the field within the API
        Type:
          type: string
          description: |
            **The description of this field differs if it's supplied with or without a FieldName, see the two tables below.**
            | Type             | Description if NOT combined with a FieldName |
            | ---------------- | ------------|
            | UNSUPPORTED      | The mentioned Api is not supported by the ASPSP, the Open Banking Service will throw an error if it’s used.     |
            | SUPPORTED        | The mentioned Api is supported by the ASPSP. This is mentioned for the following Api’s (because they are usually not supported): - POST /psus/{psuId}/Aspsps/{aspspId}/pre-authentication". If the Post is supported the corresponding api methods (GET, PUT, DELETE) are also supported, if defined in the swagger.|
            
            
            | Type             | Description if combined with a FieldName |
            | ---------------- | ------------|
            | UNSUPPORTED      | The mentioned FieldName is ignored if provided to the Open Banking Service, the Open Banking Service will not throw an error     |
            | SUPPORTED        | A subset of the values in the mentioned FieldName is supported. The Value field (which is always supplied with the SUPPORTED Type) will indicate which values are supported. If no value is provided by the Initiating Party the Open Banking Service will use a default value. If an unsupported value is used, the Open Banking Service will throw an error. |
            | MANDATORY        | The mentioned FieldName is mandatory and has to be filled. If supplied, the Value field will indicate which values are supported. If the Value field is not supplied no validation on the field is done by the Open Banking Service. If the mentioned FieldName is not filled by the Initiating Party the Open Banking Service will throw an error. If an unsupported value is used, the Open Banking Service will throw an error.     |
            | FORBIDDEN        | The mentioned FieldName is forbidden. The Open Banking Service will throw an error if the Initiating Party fills this field and the request will not be sent to the ASPSP.     |
            
        Value:
          type: string
          description: |
            Indicates the values which can be filled in the field. This
            field is only filled if the options differ from the options in the swagger
            file.
        ProtocolVersion:
          minLength: 2
          type: string
          description: |
            The ASPSP ProtocolVersion for which this is valid.
        Condition:
          type: string
          description: |
           Contains conditions which describe when this specific detail is applicable. This field uses logical operations as they are commonly used in e.g. Java and Javascript. If a field is given without a value that Operand is true if the field has any value (is not empty).
          maxLength: 255
          
    OptionType:
      type: object
      properties:
        Key1:
          type: string
        Key2:
          type: string
        Value:
          type: string
        Level:
          $ref: '#/components/schemas/OptionLevelType'
        ProtocolVersion:
          type: string
          description: |
            The ASPSP ProtocolVersion for which this is valid.
    OptionLevelType:
      type: string
      description: |
           - INFORMATIONAL: The information can be ignored
           - CRITICAL: The information must be handled otherwise the ASPSP should be ignored.
      enum:
      - INFORMATIONAL
      - CRITICAL
      
    Country:
      type: string
      description: |
        The code of the country regarding ISO 3166-1, Alpha-2 standard

    NameLabel:
      required:
        - Label
        - Language
      type: object
      properties:
        Label:
          type: string
          description: |
            A label describing a name.
        Language:
          type: string
          description: |
            Label internationalization. It specifies the language of the
            label. ISO 639-1
    AspspSpecificLabel:
      type: object
      properties:
        Fieldname:
          type: string
        Label:
          type: array
          items:
            $ref: '#/components/schemas/NameLabel'

    Link:
      required:
      - Href
      type: object
      properties:
        href:
          maxLength: 1024
          minLength: 1
          type: string
      
    Link2:
      required:
      - href
      type: object
      properties:
        href:
          maxLength: 1024
          minLength: 1
          type: string

    ConsentRequest:
      type: object
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuData'
        UsePreAuthentication:
          type: boolean
          default: false
          description: |
            This field is only applicable for ASPSP's which support pre-authentication. It can also be filled in consent requests toward
            other ASPSP's, but the value will then be ignored.

            * If set to true the Open Banking Service will store the pre-authentication token for use with future consent requests. This will only work if also a PsuId is provided which is stored in the Open Banking Service. <br>

            * If set to false the pre-authentication token will only be used to finish one consent request. After which it will be discarded.
        PreferredScaMethod:
          type: array
          default: Redirect
          items:
            type: string
            description: |
              Multiple preferred methods can be choosen.
              It's up to the ASPSP which approach will actually be used, this could be a non-preferred SCA method.
            enum:
              - Redirect
              - Decoupled
              - Embedded
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionEnum'
        Details:
          $ref: '#/components/schemas/ConsentDetails'
        TransactionFromDateTime:
          type: string
          format: date-time
          description:
            Specified start date and time for the transaction query
            period. If this is not populated, the start date will be
            open ended, and data will be returned from the earliest
            available transaction.
        TransactionToDateTime:
          type: string
          format: date-time
          description:
            Specified end date and time for the transaction query
            period. If this is not populated, the end date will be
            open ended, and data will be returned to the latest
            available transaction.
      description:
        Consent Request Initiation
      example:
        {
          "PsuData": {
            "AspspId": "20101",
            "Country": "FR"
          },
          "PreferredScaMethod": ["Redirect"],
          "Permissions": [
            "Accounts",
            "Balances",
            "Transactions"
          ],
          "Details": {
            "FrequencyPerDay": 4,
            "RecurringIndicator": true
          }
        }

    ConsentResponse:
      required:
        - ConsentId
        - ConsentStatus
      type: object
      properties:
        ConsentId:
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this consent.
          maxLength: 1024
          minLength: 1
          type: string
        ConsentStatus:
          $ref: '#/components/schemas/ConsentStatusEnum'
        PermissionInformation:
          type: string
          description: |
            Optionally a text for detailed information on the
            permission handling of the ASPSP is given.

            E.g. By default a consent is allowing a frequency of up to
            4 requests per day.

            This default is set implicitly by the Open Banking Service. If
            this parameter is not supported by the ASPSP, the Initiating
            Party is informed using this field.
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        Links:
          $ref: '#/components/schemas/InitiationResponseLinks'
        PsuMessage:
          description: |
            Text to be displayed to the PSU.
          maxLength: 1024
          minLength: 1
          type: string
      description: |
        ConsentResponse
      xml:
        name: ConsentResponse
        namespace: urn:eu:xs2a:xsd:v1

    ConsentIdentificationRequest:
      type: object
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuDataIdentification'

    ConsentIdentificationResponse:
      required:
        - ConsentId
        - ConsentStatus
      type: object
      properties:
        ConsentId:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this consent.
        ConsentStatus:
          $ref: '#/components/schemas/ConsentStatusEnum'
        AuthStatus:
          $ref: '#/components/schemas/AuthStatusEnum'
        Links:
          $ref: '#/components/schemas/Links'
        PsuMessage:
          description: |
            Text to be displayed to the PSU.
          maxLength: 1024
          minLength: 1
          type: string

    ConsentAuthorisationRequest:
      type: object
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuDataIdentification'
        PsuCredentials:
          type: array
          description: |
            List of PSU's credentials.
          items:
            $ref: '#/components/schemas/PsuAuthCredentials'

    ConsentAuthorisationResponse:
      required:
        - ConsentStatus
      type: object
      properties:
        ConsentStatus:
          $ref: '#/components/schemas/ConsentStatusEnum'
        AuthStatus:
          $ref: '#/components/schemas/AuthStatusEnum'
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        Links:
          $ref: '#/components/schemas/AuthorisationResponseLinks'
        PsuMessage:
          description: |
            Text to be displayed to the PSU.
          maxLength: 1024
          minLength: 1
          type: string

    ConsentAuthorisationUpdateRequest:
      type: object
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuDataIdentification'
        PsuCredentials:
          type: array
          description: |
            List of PSU's credentials.
          items:
            $ref: '#/components/schemas/PsuAuthCredentials'
        AuthenticationMethodId:
          type: string
          description: |
            Id of the selected method.
        ScaAuthenticationData:
          type: string
          description: |
            Depending on method. In case of binary data it has to be given
            base64 encoded.

    ConsentAuthorisationUpdateResponse:
      required:
        - ConsentStatus
      type: object
      properties:
        ConsentStatus:
          $ref: '#/components/schemas/ConsentStatusEnum'
        AuthStatus:
          $ref: '#/components/schemas/AuthStatusEnum'
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        Links:
          $ref: '#/components/schemas/AuthorisationResponseLinks'
        PsuMessage:
          description: |
            Text to be displayed to the PSU.
          maxLength: 1024
          minLength: 1
          type: string

    ConsentDetailedInformation:
      required:
        - ConsentId
        - ConsentStatus
      type: object
      properties:
        ConsentId:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this consent.
        ConsentStatus:
          $ref: '#/components/schemas/ConsentStatusEnum'
        AspspId:
          type: string
          minLength: 1
          description: |
            The Id of the ASPSP. The Open Banking Service uses this information to route the consent and accounts information requests.
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        PermissionInformation:
          type: string
          description: |
            Optionally a text for detailed information on the
            permission handling of the ASPSP is given. E.g. by default
            a consent is allowing a frequency of up to 4 requests per
            day. This default is set implicitly by the Open Banking Service. If
            this parameter is not supported by the ASPSP the Initiating
            Party is informed by this.
        FrequencyPerDay:
          type: integer
          description: |
            This field indicates the maximum frequency for an access
            per day. For a one-off access, this attribute is set to "1.
        RecurringIndicator:
          type: boolean
          description: |
            "true", if the consent is for recurring access to the
            account data.

            "false", if the consent is for one access to
            the account data.
        ValidUntilDate:
          type: string
          format: date-time
          description: |
            Date to which the consent is valid.
        LastActionDate:
          type: string
          format: date
          description: |
            Date of the last change to the consent object. Either through the XS2A interface or the PSU/ASPSP interface.
        TransactionFromDateTime:
          type: string
          format: date-time
          description: |
            Specified start date and time for the transaction query
            period.
        TransactionToDateTime:
          type: string
          format: date-time
          description: |
            Specified end date and time for the transaction query
            period.
        Links:
          $ref: '#/components/schemas/ConsentStatusLinks'
        PsuMessage:
          description: |
            Text to be displayed to the PSU.
          maxLength: 1024
          minLength: 1
          type: string
      description: |
        Consent Detailed Information
      xml:
        name: ConsentDetailedInformation
        namespace: urn:eu:xs2a:xsd:v1

    GetAccountsResponse:
      required:
        - Accounts
      type: object
      properties:
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        Links:
          $ref: '#/components/schemas/AccountLinks'
        Metadata:
          $ref: '#/components/schemas/Meta'
      description: |
        GetAccountsResponse
      xml:
        name: GetAccountsResponse
        namespace: urn:eu:xs2a:xsd:v1

    GetBalancesResponse:
      required:
        - AccountId
        - Balances
        - Timestamp
      type: object
      properties:
        AccountId:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Id of the account of the PSU as retrieved form the GET
            accounts response.
        Timestamp:
          type: string
          description: |
            Indicates the date (and time) of the balance. All dates are
            represented in ISO 8601 date-time.
          format: date-time
        Balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
        Links:
          $ref: '#/components/schemas/BalanceLinks'
        Metadata:
          $ref: '#/components/schemas/Meta'
      description: |
        GetBalancesResponse
      xml:
        name: GetBalancesResponse
        namespace: urn:eu:xs2a:xsd:v1

    GetTransactionsResponse:
      required:
        - AccountId
      type: object
      properties:
        DateFrom:
          type: string
          format: date-time
          description: |
            Date and time. All transactions on this date are included
            in the result.
        DateTo:
          type: string
          format: date-time
          description: |
            Date and time, transactions up to this date are included.
            So transaction on this date are not included in the result.
        AccountId:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Id of the account of the PSU as retrieved form the GET
            accounts response.
        Transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transactions'
        Links:
          $ref: '#/components/schemas/TransactionLinks'
        Metadata:
          $ref: '#/components/schemas/Meta'
      description: |
        GetTransactionsResponse
      xml:
        name: GetTransactionsResponse
        namespace: urn:eu:xs2a:xsd:v1

    ConsentDetails:
      type: object
      properties:
        PermittedAccountReferences:
          type: array
          items:
            $ref: '#/components/schemas/PermittedAccountReference'
        ValidUntilDate:
          type: string
          format: date
          description: |
            This parameter is requesting a valid until date for the
            requested consent. If this date is not given in the request a
            validity period of 90 days is used towards the ASPSP.
        FrequencyPerDay:
          type: integer
          description: |
            This field indicates the requested maximum frequency for an
            access per day. Allowed unattended requests per day 1-4.
        RecurringIndicator:
          type: boolean
          description: |
            Indicates if the consent is for recurring access or for one
            time access to the account data.

            **Note -** Default value is set to false, only for ASPSPs having implemented the CBI protocol.
        CombinedServiceIndicator:
          type: boolean
          default: false
          description: |
            If "true" indicates that a payment initiation service will be
            addressed in the same "session".
        OwnerName:
          type: boolean
          default: false
          description: |
            If true the Open Banking Service will ask the ASPSP for the Owername of the
            accounts.
      description: |
        Detailed consent options, not available for all ASPSPs. If a
        detailed option is not available the Open Banking Service will fall back to
        the consent requested in the ‘Permission’ field. The Initiating
        Party is notified in the response.

    PostRegistrationRequest:
      type: object
      required:
        - Psus
        - RegistrationId
      properties:
        RegistrationId:
          type: string
          description: ''
          example: '67831'
        Psus:
          type: array
          items:
            type: object
            description: ''
            required:
              - PsuId
            properties:
              PsuId:
                description: |
                  This field can be filled with an ID from the Initiating Party which refers to the PSU.
                type: string
                example: unique_psu_id_23858
        RefreshsPerDay:
          type: integer
          description: "Amount of iterations per day for PSU's data retrieval. Can be set up to 4."
          default: 1
          minimum: 1
          maximum: 4
        Parameter:
          $ref: '#/components/schemas/Parameter'

    PostRegistrationResponse:
      type: object
      properties:
        RegistrationStatus:
          $ref: '#/components/schemas/RegistrationStatusEnum'
        FinaliseRegistration:
          $ref: '#/components/schemas/Link'

    InitialisationRequest:
      type: object
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuData'
        Description:
          type: string
          description: |
            This information will be shown on the IS pages to PSU

    InitialisationResponse:
      type: object
      properties:
        RedirectUrl:
          $ref: '#/components/schemas/Link'

    PutRegistrationRequest:
      type: object
      properties:
        PsuId:
          description: |
            This field can be filled with an ID from the Initiating Party which refers to the PSU.
          type: string
          example: unique_psu_id_23858
        RegistrationStatus:
          $ref: '#/components/schemas/RegistrationStatusEnum'
        Accounts:
          type: array
          items:
            type: object
            required:
              - AccountId
            properties:
              AccountId:
                type: string
                example: "AccountId-6253"

    GetRegistrationResponse:
      type: object
      required:
        - ProductType
        - Status
        - Psus
      properties:
        ProductType:
          $ref: '#/components/schemas/ProductType'
        RegistrationStatus:
          $ref: '#/components/schemas/RegistrationStatusEnum'
        Psus:
          type: array
          items:
            type: object
            description: ''
            required:
              - PsuId
            properties:
              PsuId:
                description: |
                  This field can be filled with an ID from the Initiating Party which refers to the PSU.
                type: string
                example: unique_psu_id_23858
              Accounts:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDetails'

    GetRegistrationResponseStatus:
      type: object
      required:
        - ProductType
        - Status
        - Psus
      properties:
        ProductType:
          $ref: '#/components/schemas/ProductType'
        RegistrationStatus:
          $ref: '#/components/schemas/RegistrationStatusEnum'
        UseCaseStatus:
          description: |
            Status indicating the progress of processing in the Open Banking platform for a given use case.

              Credit Scoring:
              - REGISTRATION_CREATED : A registration is created, waiting for consent sessions to be finalized.
              - REGISTRATION_FINALISED : All PSUs in the registrations have completed their consent flow, data collection will start.
              - DATA_COLLECTION_DONE : AIS data has been retrieved for all PSUs in the registration and has been sent for processing.
              - DATA_COLLECTION_ERROR : An error happened during the data collection, the processing will not happen.
              - ANALYSIS_FINALISED : The Credit Insight processing module has given feedback regarding the processing, report results will / have been sent to the InitiatingParty endpoint.
          type: string
        Parameter:
          $ref: '#/components/schemas/Parameter'
        Psus:
          type: array
          items:
            type: object
            description: ''
            required:
              - PsuId
            properties:
              PsuId:
                description: |
                  This field can be filled with an ID from the Initiating Party which refers to the PSU.
                type: string
                example: unique_psu_id_23858
              Consents:
                type: array
                items:
                  $ref: '#/components/schemas/Consent'

    Amount:
      pattern: ^\\d{1,13}\\.\\d{1,5}$
      type: string
      description: |
        Amount of the payment. The decimal separator is a dot. A zero
        amount is considered a positive amount.

    EquivalentAmount:
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currency'
        CurrencyOfTransfer:
          $ref: '#/components/schemas/Currency'

    Currency:
      pattern: '[A-Z]{3,3}'
      type: string
      description: |
        ISO 4217 currency code.

    CurrencyExchange:
      type: object
      properties:
        SourceCurrency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            Currency from which an amount is to be converted in a currency
            conversion. ISO 4217 currency codes.
        TargetCurrency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            Currency into which an amount is to be converted in a currency
            conversion. ISO 4217 currency codes.
        UnitCurrency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            Currency in which the rate of exchange is expressed in a
            currency exchange. In the example 1GBP = xxxCUR, the unit
            currency is GBP. ISO 4217 currency codes.
        ExchangeRate:
          type: string
          description: |
            Factor used to convert an amount from one currency into another
            . This reflects the price at which one currency was bought with
            another currency.
        ContractIdentification:
          maxLength: 35
          type: string
          description: |
            Unique identification to unambiguously identify the foreign
            exchange contract
        QuotationDate:
          type: string
          description: |
            Date and time at which an exchange rate is quoted.
          format: date-time

    PermittedAccountReference:
      required:
        - AccountReference
      type: object
      properties:
        AccountReference:
          maxLength: 1020
          minLength: 1
          type: string
          description: |
            Identification of the account number (IBAN).
        Currency:
          $ref: '#/components/schemas/Currency'
      description: |
        ## Permitted account reference field usage
        This field enables the Initiating party to request consent for
        accounts, balances or transactions for a restricted list of account
        rerferences only. This kind of permission detail information must
        be supported e.g. for the Berlin Group API.

    Account:
      required:
        - AccountId
        - Currency
      type: object
      properties:
        AccountId:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            This is the account Id generated by the Open Banking Service. It should
            be used in subsequent api calls to refer to this account.
        BIC:
          pattern: '[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}'
          type: string
          description: |
            BIC
        Currency:
          $ref: '#/components/schemas/Currency'
        Name:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Name of the account.
        OwnerName:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Name of the legal account owner.
        DisplayName:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Additional name of the account.
        AccountNumber:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            The number which identifies the account, provided by the ASPSP.
            Known by the PSU. This will mostly be an IBAN, but other types
            are possible see AccountNumberType field.
        OtherAccountNumber:
          maxLength: 70
          minLength: 1
          type: string
        AccountNumberType:
          type: string
          description: |
            ISO 20022 Account Number Type, which is the name of the
            identification scheme.
          enum:
            - IBAN
            - BBAN
            - MSISDN
            - SortCodeAccountNumber
            - BANK
            - COID
            - SREN
            - SRET
            - NIDN
            - OAUT
            - CPAN
        AccountType:
          $ref: '#/components/schemas/AccountType'
        AccountNumberTypeIssuer:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Entity that assigns the identification. this could a country
            code or any organisation name or identifier that can be
            recognized by both parties according to ISO20022.
        SubType:
          maxLength: 140
          minLength: 1
          type: string
          description: |
            Since Open Banking UK V2.0. Specifies the type of account.
            Values: 'CACC' Checking account'.
        Details:
          maxLength: 140
          minLength: 1
          type: string
          description: |
            Specifications that might be provided by the ASPSP.
            * Characteristics of the account
            * Characteristics of the relevant card.
        LinkedAccount:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Case of a set of pending card transactions, the ASPSP will
            provide the Id of the relevant cash account the card is set up
            on.
        Usage:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Indications how the account is being used. For example business
            or personal. Values - 'ORGA' professional account, 'PRIV'
            private personal account'.
        Product:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Product Name of the Bank for this account, proprietary
            definition.

            For example: Girokonto, Fremdwahrungskonto, Multi
            currency account.'
        PsuRole:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Relationship between the PSU and the account: account holder,
            Co-account holder, Attorney.

    AccountType:
      type: object
      properties:
        Name:
          type: string
          description: |
            Account type, in a coded form. ISO 20022
            ExternalCashAccountType1Code.
          enum:
            - CACC
            - CASH
            - CHAR
            - CISH
            - COMM
            - CPAC
            - LLSV
            - LOAN
            - MGLD
            - MOMA
            - NREX
            - ODFT
            - ONDP
            - OTHR
            - SACC
            - SLRY
            - SVGS
            - TAXE
            - TRAN
            - TRAS
        Proprietary:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Proprietary account type as some schemes may define it. Values
            which could not be mapped to the ISO standard.
        ProprietaryOrigin:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Indicates the origin of the proprietary field. This could help
            to interpret the value.
      description: |
        An object describing the account type. It contains the sub field "Name", which is filled only, if
        the account type is one of the ISO 20022 ExternalCashAccountType1Code values.
        If the account type provided by the ASPSP is not an ISO type, the sub field "Proprietary" is filled with
        this non ISO type name and the sub field "ProprietaryOrigin" is filled with the name of the ASPSP application.

    Balance:
      required:
        - Amount
        - BalanceType
        - CreditDebitIndicator
        - Currency
      type: object
      properties:
        BalanceName:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Label of the balance.
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currency'
        BalanceType:
          $ref: '#/components/schemas/BalanceType'
        CreditDebitIndicator:
          $ref: '#/components/schemas/CreditDebitIndicator'
        LastCommitedTransaction:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            entryReference of the last committed transaction to support the
            Initiating Party in identifying whether all PSU transactions are already
            known.
        CreditLine:
          type: array
          items:
            $ref: '#/components/schemas/CreditLine'
        Date:
          type: string
          description: |
            Indicates the date of the balance. Date in ISO 8601 format yyyy
            -MM-dd.
        LastChangeDateTime:
          type: string
          description: |
            Timestamp of the last change of the balance amount. This data
            element might be used to indicate e.g. with the expected or
            booked balance that no action is known on the account, which is
            not yet booked.
          format: date-time

    BalanceType:
      type: object
      properties:
        Name:
          type: string
          description: |
            ISO 20022 Balance Type Code.
          enum:
            - CLAV
            - CLBD
            - FWAV
            - INFO
            - ITAV
            - ITBD
            - OPAV
            - OPBD
            - PRCD
            - XPCD
        Proprietary:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Proprietary balance type as some schemes may define it.
        ProprietaryOrigin:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            The application this proprietary balance type was originated
            from.

    Transactions:
      required:
        - Amount
        - BookingDateTime
        - CreditDebitIndicator
        - Currency
        - Status
      type: object
      properties:
        TransactionId:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Unique identification, as assigned by the first instructing
            agent, to unambiguously identify the transaction that is passed
            on, unchanged, throughout the entire interbank chain. Not
            provided by all ASPSPs.

            The transaction identification can be used for reconciliation,
            tracking or to link tasks relating to the transaction on the
            interbank level.
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currency'
        CreditDebitIndicator:
          $ref: '#/components/schemas/CreditDebitIndicator'
        Status:
          type: string
          description: |
            Type of transaction.
          enum:
            - BOOK
            - PDNG
            - INFO
            - FUTR
            - OTHR
        BookingDateTime:
          type: string
          description: |
            Booking date of the transaction on the account.
          format: date-time
        ExecutionDateTime:
          type: string
          description: |
            PSU Account transaction execution date.
          format: date-time
        ValueDateTime:
          type: string
          description: |
            Date and time at which assets become available to the account
            owner in case of a credit entry, or cease to be available to
            the account owner in case of a debit entry.
          format: date-time
        TransactionDate:
          type: string
          description: |
            Indicates the date of the transaction. Date in ISO format yyyy
            -MM-dd.
        RemittanceInformationUnstructured:
          maxLength: 500
          minLength: 1
          type: string
          description: |
            Unstructured remittance information.
        AddressLine:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Information that locates and identifies a specific address,
            as defined by postal services, that is presented in free format
            text.
        BankTransactionCode:
          $ref: '#/components/schemas/BankTransactionCode'
        MerchantDetail:
          $ref: '#/components/schemas/MerchantDetail'
        CreditorAgent:
          $ref: '#/components/schemas/CreditorAgent'
        CreditorAccount:
          $ref: '#/components/schemas/CreditorAccount'
        DebtorAgent:
          $ref: '#/components/schemas/DebtorAgent'
        DebtorAccount:
          $ref: '#/components/schemas/DebtorAccount'
        PurposeCode:
          type: string
          description: |
            Specifies the external purpose code in the format of character
            string with a maximum length of 4 characters.

            ISO 20022 ExternalPurpose1Code.
        RemittanceInformationStructured:
          $ref: '#/components/schemas/RemittanceInformationStructured'
        EquivalentAmount:
          $ref: '#/components/schemas/EquivalentAmount'
        References:
          $ref: '#/components/schemas/References'
        RelatedParties:
          $ref: '#/components/schemas/RelatedParties'
        CurrencyExchange:
          type: array
          description: |
            Set of elements used to provide details on the currency
            exchange.
          items:
            $ref: '#/components/schemas/CurrencyExchange'
        CategoryId:
          type: string
          description: |
            Identification of the category associated with the transaction.
            This field is reserved for future use and will only be filled if an extended service is contracted.

    CreditDebitIndicator:
      type: string
      description: |
        ISO 20022 Debit Credit Code. Indicates if the amount is credit
        (positive) or debit (negative).
      enum:
        - CRDT
        - DBIT

    Domain:
      type: object
      properties:
        DomainCode:
          type: string
          description: |
            ExternalBankTransactionDomain1Code.
        FamilyCode:
          type: string
          description: |
            Identify the type of underlying transaction. Specifies the
            family within a domain.

            ExternalBankTransactionFamily1Code.
        SubCode:
          type: string
          description: |
            Identify the type of underlying transaction. Specifies the
            sub-product family within a specific family.

            ExternalBankTransactionSubFamily1Code.

    Proprietary:
      type: object
      properties:
        Code:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Proprietary bank transaction code to identify the underlying
            transaction.
        Issuer:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Identification of the issuer of the proprietary bank
            transaction code.

    BankTransactionCode:
      type: object
      properties:
        Domain:
          $ref: '#/components/schemas/Domain'
        Proprietary:
          $ref: '#/components/schemas/Proprietary'

    CreditLine:
      required:
        - Amount
        - Currency
        - Included
        - Type
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currency'
        Type:
          type: string
          description: |
            Limit type, in a coded form.
          enum:
            - Pre-Agreed
            - Emergency
            - Temporary
            - Available
            - Credit
        Included:
          type: boolean
          description: |
            Indicates whether or not the credit line is included in the
            balance of the account.

    MerchantDetail:
      type: object
      properties:
        MerchantName:
          maxLength: 350
          minLength: 1
          type: string
          description: |
            Name of the merchant.
        MerchantCategoryCode:
          maxLength: 4
          minLength: 3
          type: string
          description: |
            Category code conform to ISO 18245, related to the type of
            services or goods the merchant provides for the transaction.

    RelatedParties:
      type: object
      properties:
        CreditorId:
          type: string
          description: |
            Identification of Creditors, e.g. a SEPA Creditor ID.
        UltimateCreditor:
          type: string
          description: |
            Ultimate party to which an amount of money is due.
        UltimateDebtor:
          type: string
          description: |
            Ultimate party that owes an amount of money to the
            (ultimate) creditor.

    CreditorAccount:
      type: object
      properties:
        Identification:
          maxLength: 34
          minLength: 1
          type: string
          description: |
            Creditor identification assigned by an institution to identify
            an account. This identification is known by the account owner.
        SchemeName:
          type: string
          description: |
            Name of the creditor identification scheme, in a coded form
            as published in an external list.
          enum:
            - IBAN
            - PAN
            - SortCodeAccountNumber
            - BBAN
            - Paym
        BIC:
          type: string
          description: |
            BIC
        Name:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Name of the creditor account, as assigned by the account
            servicing institution, in agreement with the account owner in
            order to provide an additional means of identification of the
            account.
        SecondaryId:
          maxLength: 34
          minLength: 1
          type: string
          description: |
            This is secondary identification of the creditor account, as
            assigned by the account servicing institution.
        Currency:
          type: string
          description: |
            Currency of the account

    CreditorAgent:
      type: object
      properties:
        SchemeName:
          type: string
          description: |
            Name of the creditor agent identification scheme, in a coded
            form as published in an external list.
          enum:
            - BICFI
        Identification:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Unique and unambiguous creditor agent identification of a
            financial institution or a branch of a financial institution.

    DebtorAccount:
      type: object
      properties:
        Identification:
          maxLength: 34
          minLength: 1
          type: string
          description: |
            Debtor identification assigned by an institution to identify
            an account. This identification is known by the account owner.
        SchemeName:
          type: string
          description: |
            Name of the debtor identification scheme, in a coded form as
            published in an external list.
          enum:
            - IBAN
            - PAN
            - SortCodeAccountNumber
            - BBAN
            - Paym
        BIC:
          type: string
          description: |
            BIC
        Name:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            Name of the debtor account, as assigned by the account
            servicing institution, in agreement with the account owner in
            order to provide an additional means of identification of the
            account.
        SecondaryId:
          maxLength: 34
          minLength: 1
          type: string
          description: |
            This is secondary identification of the debtor account, as
            assigned by the account servicing institution.
        Currency:
          type: string
          description: |
            Currency of the account.

    DebtorAgent:
      type: object
      properties:
        SchemeName:
          type: string
          description: |
            Name of the debtor agent identification scheme, in a coded
            form as published in an external list.
          enum:
            - BICFI
        Identification:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Unique and unambiguous debtor agent identification of a
            financial institution or a branch of a financial institution.

    AuthStatusEnum:
      description: |
        This data element is containing information about the status of the SCA method applied.

        The following codes are defined for this data type.

          * 'Received':
            An authorisation or cancellation-authorisation resource has been created successfully.
          * 'PsuIdentified':
            The PSU related to the authorisation or cancellation-authorisation resource has been identified.
          * 'PsuAuthenticated':
            The PSU related to the authorisation or cancellation-authorisation resource has been identified and authenticated e.g. by a password or by an access token.
          * 'ScaMethodSelected':
            The PSU/TPP has selected the related SCA routine.
            If the SCA method is chosen implicitly since only one SCA method is available,
            then this is the first status to be reported instead of 'received'.
          * 'Started':
            The addressed SCA routine has been started.
          * 'Finalised':
            The SCA routine has been finalised successfully.
          * 'Failed':
            The SCA routine failed
          * 'Exempted':
            SCA was exempted for the related transaction, the related authorisation is successful.
          * 'Unconfirmed':
                      SCA is technically successfully finalised by the PSU, but the authorisation resource needs a confirmation command by the TPP yet.
      type: string
      enum:
        - "Received"
        - "PsuIdentified"
        - "PsuAuthenticated"
        - "ScaMethodSelected"
        - "Started"
        - "Finalised"
        - "Failed"
        - "Exempted"
        - "Unconfirmed"

    ConsentStatusEnum:
      description: |
        Status of the Account Information Service consent.
        * 'TimeoutAtTpp': This status can only occur in combination with the Bank Selection Interface (UseAuthorisationLandingPages = true). It's set if the Bank Selection Interface concludes that the consent cannot be completed because of a timeout. It's a final state. 
      type: string
      enum:
        - Open
        - Pending
        - Rejected
        - Authorised
        - Expired
        - Revoked
        - Error
        - Inactive
        - RevokedAtTpp
        - TimeoutAtTpp
        - PartiallyAuthorised

    PermissionEnum:
      type: string
      description: |
        ## Permission field usage
        This field captures permissions on the level of
          * Accounts - all account information
          * Balances - balance information for all accounts (requires ReadAccounts)
          * Transactions - all transaction information
      enum:
        - Accounts
        - Balances
        - Transactions

    AuthorisationRequiredData:
      type: object
      description: |
        The data required for PSU authentication and transaction authorisation
      properties:
        PsuCredentials:
          type: array
          description: |
            List of credentials the PSU has on the ASPSP's system. The PSU has to provide the CredentialValue for each of these (Username & Password).
          items:
            $ref: '#/components/schemas/PsuCredentials'
        ScaMethods:
          type: array
          description: |
            Array of available ScaMethods.
          items:
            $ref: '#/components/schemas/ScaMethods'
        ChosenScaMethod:
          $ref: '#/components/schemas/ScaMethods'
        ChallengeData:
          $ref: '#/components/schemas/ScaChallengeData'

    ScaMethods:
      required:
        - AuthenticationMethodId
        - AuthenticationType
      type: object
      properties:
        AuthenticationType:
          type: string
          example: SMS_OTP
          description: |
            Type of the SCA authentication method. The following methods are commonly seen coming from the ASPSP:
            -  SMS_OTP: The PSU will receive a One Time Password via SMS
            -  CHIP_OTP: The PSU will be presented with a picture or text to create a One Time Password using their bank card
            -  PHOTO_OTP: The PSU will be presented with a picture to create a One Time Password
            -  PUSH_OTP: The PSU will receive a One Time Password via push notification on their mobile device
            -  SMTP_OTP: The PSU will receive a One Time Password via email
        AuthenticationMethodId:
          type: string
          description: |
            An identification provided by the ASPSP for the later
            identification of the authentication method selection.
        Version:
          type: string
          description: |
            Depending on the AuthenticationType. This version can be used
            by differentiating authentication tools used within performing
            OTP generation in the same authentication type. This version
            can be referred to in the ASPSP's documentation.
        Name:
          type: string
          description: |
            This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP. Alternatively this could be a description provided by the ASPSP like "SMS OTP on phone +49160 xxxxx 28".
            This name shall be used by the TPP
            when presenting a list of authentication methods to the PSU, if
            available.
        Explanation:
          type: string
          description: |
            Detailed information about the SCA method, meant for the PSU.

    ScaChallengeData:
      type: object
      properties:
        AdditionalInformation:
          type: string
          description: |
            Additional Information for the PSU describing the method.
        Data:
          type: array
          description: |
            A collection of strings as challenge data.
          items:
            type: string
        Image:
          type: string
          description: |
            Image in base64 encoding.
        ImageLink:
          type: string
          description: |
            URL of image.
        OtpFormat:
          type: string
          description: |
            The OTP format.
        OtpMaxLength:
          type: integer
          description: |
            The maximum length for the OTP.
          format: int32
      description: |
        Structure to represent challenge data.

    PsuAuthCredentials:
      required:
        - CredentialId
        - CredentialValue
      type: object
      properties:
        CredentialId:
          type: string
          description: |
            CredentialId as retrieved in the response of the previous
            request.
        CredentialValue:
          type: string
          description: |
            Value of the credential.

    PsuData:
      type: object
      properties:
        AspspId:
          minLength: 1
          type: string
          description: |
            The Id of the ASPSP. The Open Banking Service uses this information to route the consent and accounts information requests.
        AspspProductCode:
          type: string
          description: |
            This is describing the ProductCode as defined by the ASPSP.
        AspspPsuId:
          type: string
          example: PSU-xyz-12345
          description: |
            PSU’s Id at ASPSP. Allows the unique identification of the PSU at
            the ASPSP.
        AspspCustomerId:
          type: string
          example: PSU-abc-12345
          description: |
            PSU’s second Id at ASPSP. Required for some ASPSPs
        AspspPsuIdType:
          type: string
          description: |
            Type of the Aspsp PSU-ID, needed in scenarios where PSUs have
            several PSU-IDs as access possibility.
        AspspPsuCorporateId:
          type: string
          description: |
            Identification of a Corporate in the Online Channels.
        AspspPsuCorporateIdType:
          type: string
          description: |
            This is describing the type of the identification needed by the
            ASPSP to identify the PSUCorporate-ID content.
        Country:
          type: string
          minLength: 2
          maxLength: 2
          pattern: '[A-Z]{2,2}'
          example: FR
          description: It is used to select a preferred country that is pre-selected on the bank selection page.

    PsuDataIdentification:
      properties:
        AspspPsuId:
          type: string
          example: PSU-xyz-12345
          description: |
            PSU’s Id at ASPSP. Allows the unique identification of the PSU at
            the ASPSP.
        AspspCustomerId:
          type: string
          example: PSU-abc-12345
          description: |
            PSU’s second Id at ASPSP. Required for some ASPSPs
        AspspPsuIdType:
          type: string
          description: |
            Type of the Aspsp PSU-ID, needed in scenarios where PSUs have
            several PSU-IDs as access possibility.
        AspspPsuCorporateId:
          type: string
          description: |
            Identification of a Corporate in the Online Channels.
        AspspPsuCorporateIdType:
          type: string
          description: |
            This is describing the type of the identification needed by the
            ASPSP to identify the PSUCorporate-ID content.

    PsuCredentials:
      required:
        - CredentialsDetails
      type: object
      properties:
        AspspProductCode:
          type: string
          description: |
            Product Identification. Used to contextualize the credentials
            to be provided by the PSU.
        CredentialsDetails:
          type: array
          description: |
            Credentials Details
          items:
            $ref: '#/components/schemas/CredentialDetails'
      description: |
        PSU Credentials on the ASPSP system.

    CredentialDetails:
      required:
        - IsSecret
        - LabelList
      type: object
      properties:
        IsSecret:
          type: string
          description: |
            Binary identification of the transparancy of the provided
            credentials by the PSU. Can have 2 values,
            * true
            * false

            Can be provided by ASPSP. If not provided by the
            ASPSP then by default,
            * true, if the CredentialId=ewl-password
            * false, if CredentialId=ewl-user-id
        CredentialId:
          type: string
          description: |
            Credential detail identification of the PSU credential at the
            bank (provided by CBI if approach is Embedded). If not provided
            by the ASPSP, then default values should be,
            * ewl-user-id, when IsSecret=false
            * ewl-password, when IsSecret=true
        LabelList:
          type: array
          description: |
            The list of the labels to show to the PSU. They are
            internationalized.
          items:
            $ref: '#/components/schemas/CredentialLabel'
      description: |
        Credentials Details

    CredentialLabel:
      required:
        - Label
        - Language
      type: object
      properties:
        Label:
          type: string
          description: |
            The label associated to the credentials to show to the PSU.
        Language:
          type: string
          description: |
            Label internationalization. It specifies the language of the
            label. The default value is EN.

    References:
      type: object
      properties:
        EndToEndId:
          type: string
          description: |
            Unique identification, as assigned by the Initiating Party,
            to unambiguously identify the transaction. This identification
            is passed on, unchanged, throughout the entire end-to end chain
            . Usage The end-to-end identification can be used for
            reconciliation or to link tasks relating to the transaction. It
            can be included in several messages related to the transaction.
        MandateId:
          type: string
          description: |
            Identification of Mandates, e.g. a SEPA Mandate ID.
        ChequeNumber:
          type: string
          description: |
            Identification of a Cheque.
        StatementReference:
          type: array
          description: |
            Can contains many statementReferences for OB UK.
          items:
            maxLength: 35
            minLength: 1
            type: string
        TransactionReference:
          type: string
          description: |
            Unique reference for the transaction. This reference is
            optionally populated, and may as an example be the FPID in the
            Faster Payments context.

    RemittanceInformationStructured:
      required:
        - Reference
      type: object
      properties:
        Reference:
          maxLength: 140
          minLength: 1
          type: string
          description: |
            The actual structured remittance information e.g.
            RF18539007547034.
        Type:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            The type of the structured information e.g. SCOR.
        Issuer:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Identification of the issuer of the reference document type
            e.g. ISO.

    InitiationResponseLinks:
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The actual
        hyperlinks used in the response depend on the dynamical decisions on
        authorization approach for example. Remark - All links are full links.

        * 'PreAuthenticationForEmbedded': In case of an embedded pre-authentication required by the ASPSP, the Initiating Party has to use this link.
        * 'RedirectUrl': In case of an Redirect approach, the Initiating Party has to use this link to redirect the PSU’s browser session.
        * 'PostAuthorisationForExplicit': In case the ASPSP requires explicit start of authorization e.g. for multiple authorizations.
        * 'PostIdentificationForDecoupled': In case of a Decoupled approach, the Initiating Party has to use this link to post the PSU username.
        * 'PostAuthorisationForEmbedded': In case of an embedded approach, the Initiating Party has to use this link to post the PSU credentials.
        * 'SelectAuthenticationMethod': In case of an embedded approach, the Initiating Party has to use this link to post the credentials.
        * 'AuthorizeTransaction': In case of an embedded approach, the Initiating Party has to authorize the transaction (consent) by providing the SCA OneTimePassword.
        * 'GetConsentStatus': Endpoint to be called for retrieving the consent status.
      type: object
      properties:
        PreAuthenticationForEmbedded:
          $ref: '#/components/schemas/Link'
        RedirectUrl:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForExplicit:
          $ref: '#/components/schemas/Link'
        PostIdentificationForDecoupled:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        SelectAuthenticationMethod:
          $ref: '#/components/schemas/Link'
        AuthorizeTransaction:
          $ref: '#/components/schemas/Link'
        GetConsentStatus:
          $ref: '#/components/schemas/Link'

    AuthorisationResponseLinks:
      type: object
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The
        actual hyperlinks used in the response depend on the dynamical
        decisions on authorization approach for example.
        Remark - All links are full links.

        * 'RedirectUrl': In case of an Redirect approach, the Initiating Party has to use this link to redirect the PSU’s browser session.
        * 'PutAuthorisationForEmbedded': In case of an embedded approach, the Initiating Party has to use this link to post the PSU credentials.
        * 'SelectAuthenticationMethod': In case of an embedded approach, the Initiating Party has to use this link to post the credentials.
        * 'AuthorizeTransaction': In case of an embedded approach, the Initiating Party has to authorize the transaction (consent) by providing the SCA OneTimePassword.
        * 'GetConsentStatus': Endpoint to be called for retrieving the consent status.
      properties:
        RedirectUrl:
          $ref: '#/components/schemas/Link'
        PutAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        SelectAuthenticationMethod:
          $ref: '#/components/schemas/Link'
        AuthorizeTransaction:
          $ref: '#/components/schemas/Link'
        GetConsentStatus:
          $ref: '#/components/schemas/Link'

    ConsentStatusLinks:
      type: object
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The
        actual hyperlinks used in the response depend on the dynamical
        decisions on authorization approach for example.
        Remark - All links are full links.

        * 'RedirectUrl': In case of an Redirect approach, the Initiating Party has to use this link to redirect the PSU’s browser session.
        * 'PostIdentificationForDecoupled': In case of a Decoupled approach, the Initiating Party has to use this link to post the PSU username.
        * 'PostAuthorisationForEmbedded': In case of an embedded approach, the Initiating Party has to use this link to post the PSU credentials.
        * 'SelectAuthenticationMethod': In case of an embedded approach, the Initiating Party has to use this link to post the credentials.
        * 'AuthorizeTransaction': In case of an embedded approach, the Initiating Party has to authorize the transaction (consent) by providing the SCA OneTimePassword.
        * 'GetConsentStatus': Endpoint to be called for retrieving the consent status.
      properties:
        RedirectUrl:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForExplicit:
          $ref: '#/components/schemas/Link'
        PostIdentificationForDecoupled:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        PutAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        SelectAuthenticationMethod:
          $ref: '#/components/schemas/Link'
        AuthorizeTransaction:
          $ref: '#/components/schemas/Link'
        GetConsentStatus:
          $ref: '#/components/schemas/Link'

    PaginationLinks:
      required:
        - Self
      type: object
      properties:
        Self:
          $ref: '#/components/schemas/Link'
        First:
          $ref: '#/components/schemas/Link'
        Last:
          $ref: '#/components/schemas/Link'
        Next:
          $ref: '#/components/schemas/Link'
        Prev:
          $ref: '#/components/schemas/Link'
      description: |
        A list of hyperlinks to be recognized by the Initiating Party.
        The actual hyperlinks used in the response depend on the
        dynamical decisions on authorization approach for example.
        Remark - All links are full links.

        * 'Self': The endpoint to this page.
        * 'First': In case of paginated response, endpoint for the first page
        * 'Last': In case of paginated response, endpoint for the last page.
        * 'Next': In case of paginated response, endpoint for the next page.
        * 'Prev': In case of paginated response, endpoint for the previous page.
      discriminator:
        propertyName: classType

    AccountLinks:
      allOf:
        - $ref: '#/components/schemas/PaginationLinks'
        - type: object
          properties:
            Account:
              type: array
              items:
                $ref: '#/components/schemas/AccountItemLink'
          description: |
            A list of hyperlinks to be recognized by the Initiating Party.
            The actual hyperlinks used in the response depend on the
            dynamical decisions on authorization approach for example.
            Remark - All links are full links.

            * 'Self': The endpoint to this page.
            * 'First': In case of paginated response, endpoint for the first page
            * 'Last': In case of paginated response, endpoint for the last page.
            * 'Next': In case of paginated response, endpoint for the next page.
            * 'Prev': In case of paginated response, endpoint for the previous page.
            * 'Account->Balances': Endpoint for GET balances of that account.
            * 'Account->Transactions': Endpoint for GET transactions of that account.

    AccountItemLink:
      required:
        - AccountId
      type: object
      properties:
        AccountId:
          maxLength: 40
          minLength: 1
          type: string
          description: |
            A unique and immutable identifier used to identify the account
            resource.
        Balances:
          $ref: '#/components/schemas/Link'
        Transactions:
          $ref: '#/components/schemas/Link'

    BalanceLinks:
      allOf:
        - $ref: '#/components/schemas/PaginationLinks'
        - type: object
          properties:
            Transactions:
              $ref: '#/components/schemas/Link'
          description: |
            A list of hyperlinks to be recognized by the Initiating Party.
            The actual hyperlinks used in the response depend on the
            dynamical decisions on authorization approach for example.
            Remark - All links are full links.

            * 'Self': The endpoint to this page.
            * 'First': In case of paginated response, endpoint for the first page
            * 'Last': In case of paginated response, endpoint for the last page.
            * 'Next': In case of paginated response, endpoint for the next page.
            * 'Prev': In case of paginated response, endpoint for the previous page.
            * 'Transactions': Endpoint for the transactions for this account.

    TransactionLinks:
      allOf:
        - $ref: '#/components/schemas/PaginationLinks'
        - type: object
          properties:
            Download:
              $ref: '#/components/schemas/Link'
            Balances:
              $ref: '#/components/schemas/Link'
          description: |
            A list of hyperlinks to be recognized by the Initiating Party.
            The actual hyperlinks used in the response depend on the
            dynamical decisions on authorization approach for example.
            Remark - All links are full links.

            * 'Self': The endpoint to this page.
            * 'First': In case of paginated response, endpoint for the first page
            * 'Last': In case of paginated response, endpoint for the last page.
            * 'Next': In case of paginated response, endpoint for the next page.
            * 'Prev': In case of paginated response, endpoint for the previous page.
            * 'Download': In case of unknown number of transactions in non-paginated response this link is provided to retrieve the transactions as a stream for download in the same JSON structure..
            * 'Balances': Endpoint for the balances for this account.

    Links:
      type: object
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The
        actual hyperlinks used in the response depend on the dynamical
        decisions on authorization approach for example.
        Remark - All links are full links.

        * 'GetConsentStatus': Endpoint to be called for retrieving the consent status.
      properties:
        GetConsentStatus:
          $ref: '#/components/schemas/Link'

    Parameter:
      type: array
      items:
        $ref: '#/components/schemas/Param'
    Param:
      type: object
      description: key value pairs for additional parameter
      properties:
        Key:
          type: string
        Value:
          type: string

    Meta:
      type: object
      properties:
        TotalPages:
          type: integer
          format: int32
          description: |
            Number of pages in case of a paginated response.

    Error:
      required:
        - Code
        - Message
      type: object
      properties:
        Code:
          pattern: '[0-9]{1,3}'
          type: string
        Message:
          maxLength: 140
          minLength: 1
          type: string
        Details:
          type: string
        Link:
          $ref: '#/components/schemas/Link'
      description: |
        |HTTP Status|Code |Description
        |-----------|-----|---------------------------------------
        |400        |001  |Bad client request
        |           |002  |The message does not comply the schema definition
        |           |101  |The client or merchant is unknown
        |           |102  |The client or merchant is inactive
        |           |122  |The PSU consent is not valid
        |           |133  |A conditional field is missing
        |           |136  |Consent could not be found
        |401        |003  |Invalid signature
        |           |021  |Unauthorized
        |           |121  |The PSU consent does not exist
        |           |123  |The PSU consent is expired
        |           |131  |A one-off consent is required - but could not be found
        |           |154  |Invalid digest
        |403        |007  |Initiating Party is not authorized
        |           |017  |Initiating Party Token is expired
        |           |119  |A PSU subscription is present, but inactive
        |404        |104  |Aspsp is unknown
        |           |106  |The psu is unknown
        |           |110  |Resource could not be found
        |           |114  |The account is unknown
        |           |150  |No pre-authentication found
        |410        |117  |The aspsp pagination resource timed out
        |415        |158  |Unsupported media type
        |500        |004  |An internal error occurred
        |           |116  |The aspsp responded with an error
        |           |152  |Ivalid response from ASPSP
        |502        |012  |Aspsp did not authorize
        |503        |016  |Request limit of the ASPSP server exceeded

    Error2:
      required:
        - Code
        - Message
      type: object
      properties:
        Code:
          pattern: '[0-9]{1,3}'
          type: string
        Message:
          maxLength: 140
          minLength: 1
          type: string
        Details:
          type: string
        Link:
          $ref: '#/components/schemas/Link2'
      description: |
        |HTTP Status|Code |Description
        |-----------|-----|---------------------------------------
        |400        |001  |Bad client request
        |           |002  |The message does not comply the schema definition
        |           |101  |The client or merchant is unknown
        |           |102  |The client or merchant is inactive
        |           |122  |The PSU consent is not valid
        |           |133  |A conditional field is missing
        |           |136  |Consent could not be found
        |401        |003  |Invalid signature
        |           |021  |Unauthorized
        |           |121  |The PSU consent does not exist
        |           |123  |The PSU consent is expired
        |           |131  |A one-off consent is required - but could not be found
        |           |154  |Invalid digest
        |403        |007  |Initiating Party is not authorized
        |           |017  |Initiating Party Token is expired
        |           |119  |A PSU subscription is present, but inactive
        |404        |104  |Aspsp is unknown
        |           |106  |The psu is unknown
        |           |110  |Resource could not be found
        |           |114  |The account is unknown
        |           |150  |No pre-authentication found
        |410        |117  |The aspsp pagination resource timed out
        |415        |158  |Unsupported media type
        |500        |004  |An internal error occurred
        |           |116  |The aspsp responded with an error
        |           |152  |Ivalid response from ASPSP
        |502        |012  |Aspsp did not authorize
        |503        |016  |Request limit of the ASPSP server exceeded

    ProductType:
      type: string
      description: |
        The type of the product the registration is created for
      enum:
        - DataAggregation
        - DataAggregationWithEnrichment
        - CreditScoring
        - AccountAuthorisation

    RegistrationStatusEnum:
      type: string
      description: |
        The status of the requested registration
      enum:
        - Created
        - Pending
        - Finalised

    Consent:
      type: object
      description: ''
      required:
        - ConsentId
      properties:
        ConsentId:
          type: string
          description: ''
          example: '1234567'
        ConsentStatus:
          $ref: '#/components/schemas/ConsentStatusEnum'
        ValidUntil:
          type: string
          format: 'date-time'
          example: "2022-09-25T08:15:00.856Z"
        AspspId:
          type: string
          description: ''
          example: '121'
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountDetails'

    AccountDetails:
      type: object
      description: ''
      required:
        - AccountId
      properties:
        AccountId:
          type: string
          description: ''
          example: 'AccountId-6879'
        Identification:
          type: string
          description: ''
          example: ''
        Currency:
          type: string
          description: ''
          example: 'EUR'
        SchemeName:
          type: string
          description: ''
          example: ''

    PaymentInitiationRequest:
      description: |
        Payment Initiation Request
      required:
        - CommonPaymentData
      additionalProperties: false
      properties:
        PaymentProduct:
          type: array
          description: |
            Multiple PaymentProducts can only be supplied if `UseAuthorisationLandingPages` equals `TRUE`. These will then influence ASPSPs visible to the PSU on the Bank Selection Interface.
            The IDEAL payment product cannot be mixed with the other PSD2-xxxx payment products, because it requires a separate subscription and therefore uses a different authorization token.
          items:
            $ref: '#/components/schemas/PaymentProductEnum'
        PaymentProductChangeable:
          type: boolean
          default: false
          description: |
            Allowing PSU to change pre-selected payment product if the ASPSP supports more than one from the list provided by the Initiating Party. Usable only if `UseAuthorisationLandingPages` equals `TRUE`. Otherwise will be ignored.
        ProductSpecificMasterData:
          type: array
          description: |
            The array is defined to mention the master data specific to selected payment product
          items:
            $ref: '#/components/schemas/ProductSpecificMasterData'
        PsuData:
          $ref: '#/components/schemas/PsuData'
        CommonPaymentData:
          $ref: '#/components/schemas/PaymentInitiationRequestBasic'
        IDEALPayments:
          $ref: '#/components/schemas/IDEALPayments'
      
    PaymentInitiationRequestBasic:
      type: object
      additionalProperties: false
      required:
        - Amount
      properties:
        UsePreAuthentication:
          type: boolean
          default: false
          description: |
            This field is only applicable for Aspsp which support pre-authentication. It can also be filled in payments toward other ASPSP's, but the value will then be ignored.
            * If set to true the Open Banking Service will store the pre-authentication token for use with future payments. This will only work if also a PsuId is provided which is stored in the Open Banking Service.
            * If set to false the pre-authentication token will only be used to finish one payment. After which it will be discarded.
        EndToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Unique identification, as assigned by the initiating party,
            to unambiguously identify the transaction. This
            identification is passed on, unchanged, throughout the
            entire end-to-end chain. Usage: The end-to-end
            identification can be used for reconciliation or to link
            tasks relating to the transaction. It can be included in
            several messages related to the transaction.
            Required for PSD2 payments
          example: ID-0123456789
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
            Required for PSD2 payments
          example: InitParty ref-id-23457890
        PreferredScaMethod:
          type: array
          description: |
            Multiple preferred methods can be choosen. It is not guaranteed that the ASPSP will use the preferred method.
          items:
            type: string
            enum:
              - Redirect
              - Decoupled
              - Embedded
        TransactionType:
          type: string
          description: |
            Transaction type used in this transaction.
            ONLINE - Used particularly for Online transactions, e.g. a webshop
            QR - Used for transactions from a QR. eg. Invoice
            INSTORE - Used for instore transactions for eg.- a POS device
            P2P - Used for peer-to-peer (customer-to-customer) transactions, e.g. a Transaction Request
          enum:
            - Online
            - QR
            - Instore
            - P2P
          default: Online
        ExpirationPeriod:
          type: integer
          description: |
            Time in seconds after which the transaction will expire. If not provided a default value will be used if the `PaymentProduct` equals `IDEAL`. For ONLINE - 1200 and for INSTORE - 120. Required for QR type transactions
          minimum: 60
          maximum: 3600
          exclusiveMinimum: false
          exclusiveMaximum: false
        Amount:
          $ref: '#/components/schemas/Amount'
        DebtorInformation:
          $ref: '#/components/schemas/DebtorInformation'
        CreditorInformation:
          $ref: '#/components/schemas/CreditorInformation'
        ChargeBearer:
          type: string
          description: |
            Charge bearer.

            Note - ISO20022 ChargeBearerType1Code.
          enum:
            - DEBT
            - CRED
            - SHAR
            - SLEV
        PurposeCode:
          type: string
          description: |
            Specifies the purpose code that resulted in a payment initiation.
            Fill with a 4 characters code from the ExternalPurpose1Code list published
            by ISO20022 or use the values ‘Commerce’, ‘Carpark’, ‘Transport’.
        CategoryPurpose:
            $ref: '#/components/schemas/CategoryPurposeEnum'
        PaymentContext:
          $ref: '#/components/schemas/RiskInformation'
        CrossCurrencyPayments:
          $ref: '#/components/schemas/CrossCurrencyPayment'
        RegulatoryReportingCodes:
          maxItems: 10
          minItems: 1
          type: array
          description: |
            List of needed regulatory reporting codes for international payments
          items:
            $ref: '#/components/schemas/RegulatoryReportingCode'
          x-DefinitionType: ISO20022
        RemittanceInformation:
          maxLength: 140
          minLength: 1
          type: string
          description: |
            Information supplied to enable the matching of an entry with
            the items that the transfer is intended to settle. This information
            will be visible to the Payment Service User.

            **Conditional validation:**
            * In case the PaymentProduct is set to IDEAL the maxLength is limited to 35
        RemittanceInformationStructured:
          $ref: '#/components/schemas/RemittanceInformationStructured'
      description: |
        Basic type for Payment Initiation Request

    ScheduledPaymentInitiationRequest:
      additionalProperties: false
      description: |
        ScheduledPaymentInitiationRequest
      required:
        - CommonPaymentData
      properties:
        PaymentProduct:
          type: array
          description: |
            Multiple PaymentProducts can only be supplied if `UseAuthorisationLandingPages` equals `TRUE`. These will then influence ASPSP's visible to the PSU on the Bank Selection Interface.
          items:
            $ref: '#/components/schemas/PaymentProductEnum'
        PaymentProductChangeable:
          type: boolean
          default: false
          description: |
            Allowing PSU to change pre-selected payment product if the ASPSP supports more than one from the list provided by the Initiating Party. Usable only if `UseAuthorisationLandingPages` equals `TRUE`. Otherwise will be ignored.
        ProductSpecificMasterData:
          type: array
          description: |
            The array is defined to mention the master data specific to selected payment product
          items:
            $ref: '#/components/schemas/ProductSpecificMasterData'
        PsuData:
          $ref: '#/components/schemas/PsuData'
        CommonPaymentData:
          $ref: '#/components/schemas/ScheduledPaymentInitiationRequestBasic'
      
    ScheduledPaymentInitiationRequestBasic:
      type: object
      additionalProperties: false
      required:
        - Amount
        - RequestedExecutionDate
      properties:
        UsePreAuthentication:
          type: boolean
          default: false
          description: |
            This field is only applicable for ASPSP's which support pre-authentication. It can also be filled in payments toward other ASPSP's, but the value will then be ignored.
            * If set to true the Open Banking Service will store the pre-authentication token for use with future payments. This will only work if also a PsuId is provided which is stored in the Open Banking Service.
            * If set to false the pre-authentication token will only be used to finish one payment. After which it will be discarded.
        EndToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Unique identification, as assigned by the initiating party,
            to unambiguously identify the transaction. This
            identification is passed on, unchanged, throughout the
            entire end-to-end chain. Usage: The end-to-end
            identification can be used for reconciliation or to link
            tasks relating to the transaction. It can be included in
            several messages related to the transaction.
            Required for PSD2 payments
          example: ID-0123456789
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
            Required for PSD2 payments
          example: InitParty ref-id-23457890
        PreferredScaMethod:
          type: array
          description: |
            Multiple preferred methods can be choosen. It is not guaranteed that the ASPSP will use the preferred method.
          items:
            type: string
            enum:
              - Redirect
              - Decoupled
              - Embedded
        TransactionType:
          type: string
          description: |
            Transaction type used in this transaction.
            ONLINE - Used particularly for Online transactions, e.g. a webshop
            QR - Used for transactions from a QR. eg. Invoice
            INSTORE - Used for instore transactions for eg.- a POS device
            P2P - Used for peer-to-peer (customer-to-customer) transactions, e.g. a Transaction Request
          enum:
            - Online
            - QR
            - Instore
            - P2P
          default: Online
        ExpirationPeriod:
          type: integer
          description: |
            Time in seconds after which the transaction will expire. If not provided a default value will be used if the `PaymentProduct` equals `IDEAL`. For ONLINE - 1200 and for INSTORE - 120. Required for QR type transactions
          minimum: 60
          maximum: 3600
          exclusiveMinimum: false
          exclusiveMaximum: false
        Amount:
          $ref: '#/components/schemas/Amount'
        DebtorInformation:
          $ref: '#/components/schemas/DebtorInformation'
        CreditorInformation:
          $ref: '#/components/schemas/CreditorInformation'
        ChargeBearer:
          type: string
          description: |
            Charge bearer.

            Note - ISO20022 ChargeBearerType1Code.
          enum:
            - DEBT
            - CRED
            - SHAR
            - SLEV
        PurposeCode:
          type: string
          description: |
            Specifies the purpose code that resulted in a payment initiation.
            Fill with a 4 characters code from the ExternalPurpose1Code list published
            by ISO20022 or use the values ‘Commerce’, ‘Carpark’, ‘Transport’.
        CategoryPurpose:
            $ref: '#/components/schemas/CategoryPurposeEnum'
        PaymentContext:
          $ref: '#/components/schemas/RiskInformation'
        CrossCurrencyPayments:
          $ref: '#/components/schemas/CrossCurrencyPayment'
        RegulatoryReportingCodes:
          maxItems: 10
          minItems: 1
          type: array
          description: |
            List of needed regulatory reporting codes for international payments
          items:
            $ref: '#/components/schemas/RegulatoryReportingCode'
          x-DefinitionType: ISO20022
        RemittanceInformation:
          maxLength: 140
          minLength: 1
          type: string
          description: |
            Information supplied to enable the matching of an entry with
            the items that the transfer is intended to settle. This information
            will be visible to the Payment Service User.

            **Conditional validation:**
            * In case the PaymentProduct is set to IDEAL the maxLength is limited to 35
        RemittanceInformationStructured:
          $ref: '#/components/schemas/RemittanceInformationStructured'
        RequestedExecutionDate:
          type: string
          description: |
            Date of first payment execution. ISO 8601 DateTime.
          format: date-time
      description: |
        Basic type for Scheduled Payment InitiationRequest

    PeriodicPaymentInitiationRequest:
      additionalProperties: false
      description: |
        Periodic Payment Initiation Request
      required:
        - CommonPaymentData
      properties:
        PaymentProduct:
          type: array
          description: |
            Multiple PaymentProducts can only be supplied if `UseAuthorisationLandingPages` equals `TRUE`. These will then influence ASPSPs visible to the PSU on the Bank Selection Interface.
          items:
            $ref: '#/components/schemas/PaymentProductEnum'
        PaymentProductChangeable:
          type: boolean
          default: false
          description: |
            Allowing PSU to change pre-selected payment product if the ASPSP supports more than one from the list provided by the Initiating Party. Usable only if `UseAuthorisationLandingPages` equals `TRUE`. Otherwise will be ignored.
        ProductSpecificMasterData:
          type: array
          description: |
            The array is defined to mention the master data specific to selected payment product
          items:
            $ref: '#/components/schemas/ProductSpecificMasterData'
        PsuData:
          $ref: '#/components/schemas/PsuData'
        CommonPaymentData:
          $ref: '#/components/schemas/PeriodicPaymentInitiationRequestBasic'
      
    PeriodicPaymentInitiationRequestBasic:
      type: object
      additionalProperties: false
      required:
        - Amount
        - PeriodRules
      properties:
        UsePreAuthentication:
          type: boolean
          default: false
          description: |
            This field is only applicable for ASPSP's which support pre-authentication. It can also be filled in payments toward other Aspsps, but the value will then be ignored.
            * If set to true the Open Banking Service will store the pre-authentication token for use with future payments. This will only work if also a PsuId is provided which is stored in the Open Banking Service.
            * If set to false the pre-authentication token will only be used to finish one payment. After which it will be discarded.
        EndToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Unique identification, as assigned by the initiating party,
            to unambiguously identify the transaction. This
            identification is passed on, unchanged, throughout the
            entire end-to-end chain. Usage: The end-to-end
            identification can be used for reconciliation or to link
            tasks relating to the transaction. It can be included in
            several messages related to the transaction.
            Required for PSD2 payments
          example: ID-0123456789
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
            Required for PSD2 payments
          example: InitParty ref-id-23457890
        PreferredScaMethod:
          type: array
          description: |
            Multiple preferred methods can be choosen. It is not guaranteed that the ASPSP will use the preferred method.
          items:
            type: string
            enum:
              - Redirect
              - Decoupled
              - Embedded
        TransactionType:
          type: string
          description: |
            Transaction type used in this transaction.
            ONLINE - Used particularly for Online transactions, e.g. a webshop
            QR - Used for transactions from a QR. eg. Invoice
            INSTORE - Used for instore transactions for eg.- a POS device
            P2P - Used for peer-to-peer (customer-to-customer) transactions, e.g. a Transaction Request
          enum:
            - Online
            - QR
            - Instore
            - P2P
          default: Online
        ExpirationPeriod:
          type: integer
          description: |
            Time in seconds after which the transaction will expire. If not provided a default value will be used if the `PaymentProduct` equals `IDEAL`. For ONLINE - 1200 and for INSTORE - 120. Required for QR type transactions
          minimum: 60
          maximum: 3600
          exclusiveMinimum: false
          exclusiveMaximum: false
        Amount:
          $ref: '#/components/schemas/Amount'
        DebtorInformation:
          $ref: '#/components/schemas/DebtorInformation'
        CreditorInformation:
          $ref: '#/components/schemas/CreditorInformation'
        ChargeBearer:
          type: string
          description: |
            Charge bearer.

            Note - ISO20022 ChargeBearerType1Code.
          enum:
            - DEBT
            - CRED
            - SHAR
            - SLEV
        PurposeCode:
          type: string
          description: |
            Specifies the purpose code that resulted in a payment initiation.
            Fill with a 4 characters code from the ExternalPurpose1Code list published
            by ISO20022 or use the values ‘Commerce’, ‘Carpark’, ‘Transport’.
        CategoryPurpose:
            $ref: '#/components/schemas/CategoryPurposeEnum'
        PaymentContext:
          $ref: '#/components/schemas/RiskInformation'
        CrossCurrencyPayments:
          $ref: '#/components/schemas/CrossCurrencyPayment'
        RegulatoryReportingCodes:
          maxItems: 10
          minItems: 1
          type: array
          description: |
            List of needed regulatory reporting codes for international payments
          items:
            $ref: '#/components/schemas/RegulatoryReportingCode'
          x-DefinitionType: ISO20022
        RemittanceInformation:
          maxLength: 140
          minLength: 1
          type: string
          description: |
            Information supplied to enable the matching of an entry with
            the items that the transfer is intended to settle. This information
            will be visible to the Payment Service User.

            **Conditional validation:**
            * In case the PaymentProduct is set to IDEAL the maxLength is limited to 35
        RemittanceInformationStructured:
          $ref: '#/components/schemas/RemittanceInformationStructured'
        PeriodRules:
          $ref: '#/components/schemas/PeriodRules'
      description: |
        Basic type for Periodic Payment InitiationRequest

    BulkPaymentInitiationRequest:
      additionalProperties: false
      description: |
        Bulk Payment Initiation Request
      required:
        - CommonPaymentData
      properties:
        PaymentProduct:
          type: array
          description: |
            Multiple PaymentProducts can only be supplied if `UseAuthorisationLandingPages` equals `TRUE`. These will then influence ASPSPs visible to the PSU on the Bank Selection Interface.
          items:
            $ref: '#/components/schemas/PaymentProductEnum'
        PaymentProductChangeable:
          type: boolean
          default: false
          description: |
            Allowing a PSU to change the pre-selected payment product if the ASPSP supports more than one from the list provided by the Initiating Party. Usable only if `UseAuthorisationLandingPages` equals `TRUE`. Otherwise will be ignored.
        ProductSpecificMasterData:
          type: array
          description: |
            The array is defined to mention the master data specific to selected payment product
          items:
            $ref: '#/components/schemas/ProductSpecificMasterData'
        PsuData:
          $ref: '#/components/schemas/PsuData'
        CommonPaymentData:
          $ref: '#/components/schemas/BulkPaymentInitiationRequestBasic'

    BulkPaymentInitiationRequestBasic:
      type: object
      additionalProperties: false
      required:
        - Payments
      properties:
        UsePreAuthentication:
          type: boolean
          default: false
          description: |
            This field is only applicable for ASPSP's which support pre-authentication. It can also be filled in payments toward other ASPSP's, but the value will then be ignored.
            * If set to true the Open Banking Service will store the pre-authentication token for use with future payments. This will only work if also a PsuId is provided which is stored in the Open Banking Service.
            * If set to false the pre-authentication token will only be used to finish one payment. After which it will be discarded.
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
            Required for PSD2 payments
          example: InitParty ref-id-23457890
        PreferredScaMethod:
          type: array
          description: |
            Multiple preferred methods can be choosen. It is not guaranteed that the ASPSP will use the preferred method.
          items:
            type: string
            enum:
              - Redirect
              - Decoupled
              - Embedded
        TransactionType:
          type: string
          description: |
            Transaction type used in this transaction.
            ONLINE - Used particularly for Online transactions, e.g. a webshop
            QR - Used for transactions from a QR. eg. Invoice
            INSTORE - Used for instore transactions for eg.- a POS device
            P2P - Used for peer-to-peer (customer-to-customer) transactions, e.g. a Transaction Request
          enum:
            - Online
            - QR
            - Instore
            - P2P
          default: Online
        ExpirationPeriod:
          type: integer
          description: |
            Time in seconds after which the transaction will expire. If not provided a default value will be used if the `PaymentProduct` equals `IDEAL`. For ONLINE - 1200 and for INSTORE - 120. Required for QR type transactions
          minimum: 60
          maximum: 3600
          exclusiveMinimum: false
          exclusiveMaximum: false
        DebtorInformation:
          $ref: '#/components/schemas/DebtorInformation'
        ChargeBearer:
          type: string
          description: |
            Charge bearer.

            Note - ISO20022 ChargeBearerType1Code.
          enum:
            - DEBT
            - CRED
            - SHAR
            - SLEV
        CategoryPurpose:
            $ref: '#/components/schemas/CategoryPurposeEnum'
        PaymentContext:
          $ref: '#/components/schemas/RiskInformation'
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/BulkPaymentsDetails'
      description: |
        Basic type for Bulk Payment Initiation Request

    PaymentInitiationResponse:
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataResponse'
        Links:
          $ref: '#/components/schemas/InitiationResponseLinks'
        UseWaitingScreen:
          type: boolean
          description: |
            if `true` the IP should show a waiting screen even if the the RedirectUrl is provided. On the waiting screen a redirection button should be placed. Click on the button should redirect the PSU by the link from `RedirectUrl`
      description: |
        Payment Initiation Response

    RefundInitiationRequest:
      type: object
      additionalProperties: false
      required:
        - CommonPaymentDataRefund
        - Refunds
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataRefund'
      description: |
        Refund Initiation Request

    RefundInitiationResponse:
      type: object
      additionalProperties: false
      required:
        - CommonPaymentData
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataRefundResponse'
        Links:
          $ref: '#/components/schemas/RefundAuthorisationApproachLinks'

    CommonPaymentDataResponse:
      type: object
      additionalProperties: false
      required:
        - PaymentId
        - PaymentStatus
      properties:
        ExpiryDateTimestamp:
          type: string
          format: date-time
          description: |
            The timestamp from which the transaction operation will expire, expressed in UTC time format(YYYY-MM-DDThh:mm:ss.sssZ)
        GuaranteedAmount:
          description: |
            The amount guaranteed by the ASPSP/Issuer to the Merchant/CPSP. Will be provided if the min max amount values are defined in the request
          pattern: ^\d{1,13}\.\d{1,5}$
          type: string
          example: "123.45"
        PaymentStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        PaymentId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        AspspPaymentId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id used by the ASPSP/iDEAL Hub to refer to the payment.
        AspspId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id of the ASPSP selected by the PSU.
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
        FundsAvailable:
          type: boolean
          description: |
            Information whether sufficient funding is available.
        DebtorInformation:
          $ref: '#/components/schemas/DebtorInformationResponse'
        AmountRelatedDetails:
          $ref: '#/components/schemas/AmountRelatedDetails'
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.

    CommonPaymentDataRefund:
      type: object
      additionalProperties: false
      required:
        - InitiatingPartyReferenceId
        - Refunds
      properties:
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
          example: InitParty ref-id-23457890
        UsePreAuthentication:
          type: boolean
          default: false
          description: |
            Whether or not the pre-authentication token should be re-used.
        PreferredScaMethod:
          type: array
          items:
            type: string
            enum:
              - Redirect
              - Decoupled
              - Embedded
        PsuData:
          $ref: '#/components/schemas/PsuData'
        Refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'

    CommonPaymentDataRefundResponse:
      type: object
      additionalProperties: false
      required:
        - RefundId
        - RefundStatus
      properties:
        RefundId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this refund in subsequent api calls.
        RefundStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
          example: InitParty ref-id-23457890
        AmountRelatedDetails:
          $ref: '#/components/schemas/AmountRelatedDetails'
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.
        AccountErrors:
          type: array
          items:
            $ref: '#/components/schemas/AccountError'
      description: |
        Basic type for Payment Initiation Response

    PeriodRules:
      required:
        - Frequency
        - StartDateTime
      type: object
      additionalProperties: false
      properties:
        StartDateTime:
          type: string
          description: |
            Date of first occurence. ISO 8601 DateTime.
          format: date-time
        ExecutionRule:
          type: string
          description: |
            Specifies the execution rule to follow in the cases when the
            computed execution dates cannot be processed (e.g. bank holidays). The
            default value sent to the ASPSP will be FWNG.
          enum:
            - FWNG
            - PREC
        EndDate:
          type: string
          description: |
            Optional date for closing the periodic payment. Must be given
            in ISO LOCAL DATE format.
        Frequency:
          type: string
          description: |
            Specifies the frequency of the payment in order to compute
            further execution dates.
          enum:
            - DAIL
            - WEEK
            - TOWK
            - MNTH
            - TOMN
            - QUTR
            - SEMI
            - YEAR
        DayOfExecution:
          maximum: 31
          minimum: 1
          type: integer
          description: |
            Sepcifies the day of execution. Day of the month 1...31. Applicable
            only for MNTH or higher.

    BulkPaymentsDetails:
      required:
        - EndToEndId
        - Amount
      type: object
      additionalProperties: false
      description: |
      properties:
        EndToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Unique identification, as assigned by the Initiating Party,
            to unambiguously identify the transaction. This
            identification is passed on, unchanged, throughout the
            entire end-to-end chain. Usage: The end-to-end
            identification can be used for reconciliation or to link
            tasks relating to the transaction. It can be included in
            several messages related to the transaction.
            Required for PSD2 payments
          example: ID-0123456789
        Amount:
          $ref: '#/components/schemas/Amount'
        CreditorInformation:
          $ref: '#/components/schemas/CreditorInformation'
        PurposeCode:
          type: string
          description: |
            Specifies the purpose code that resulted in a payment initiation.
            Fill with a 4 characters code from the ExternalPurpose1Code list published
            by ISO20022 or use the values ‘Commerce’, ‘Carpark’, ‘Transport’.
        CrossCurrencyPayments:
          $ref: '#/components/schemas/CrossCurrencyPayment'
        RegulatoryReportingCodes:
          maxItems: 10
          minItems: 1
          type: array
          description: |
            List of needed regulatory reporting codes for international payments
          items:
            $ref: '#/components/schemas/RegulatoryReportingCode'
          x-DefinitionType: ISO20022
        RemittanceInformation:
          maxLength: 140
          minLength: 1
          type: string
          description: |
            Information supplied to enable the matching of an entry with
            the items that the transfer is intended to settle. This information
            will be visible to the Payment Service User.

            **Conditional validation:**
            * In case the PaymentProduct is set to IDEAL the maxLength is limited to 35
        RemittanceInformationStructured:
          $ref: '#/components/schemas/RemittanceInformationStructured'

    IDEALPayments:
      type: object
      additionalProperties: false
      properties:
        UseDebtorToken:
          type: boolean
          default: false
          description: |
            Identifies whether the debtor token generated by Access Point should be used
        DebtorTokenCallbackUrl:
          type: string
          description: |
            The URL which will be used by the notification service post /debtorToken API to send  the debtor token provided by the iDEAL Hub. The URL should end with the version number of the notification service. This way the Initiating Party can influence which version of the notification service is used to send the request. At the moment only '/v3' is available. The DebtorTokenCallbackUrl can also be set in the Initiating Party service subscription.            
          example: https://www.example.org/myendpoint/v3

        FlowType:
          type: string
          enum:
            - Standard
            - FastCheckout
          description: |-
            Transaction flow which the Merchant/CPSP desires to initiate.
            * _Standard_ - Used for normal iDEAL transactions.
            * _FastCheckout_ - Used for initiating the fast checkout flow where the debtor will be requested to provide checkout details which in turn iDEAL provides them to the merchant via a callback eventually.
          default: Standard
        ExpectedCheckoutData:
          type: object
          description: |
            By this the Merchant is requesting the checkout data from the iDEAL Hub with the finalization of the transaction.
          properties:
            DebtorContactDetails:
              $ref: "#/components/schemas/DebtorContactDetails"
            ShippingAddress:
              type: boolean
              description: |
                Request to provide the details of the shipping address of the debtor
              example: true
              default: false
            BillingAddress:
              type: boolean
              description: |
                Request to provide the details of the billing address of the debtor
              example: true
              default: false

    PaymentDetailedInformation:
      type: object
      additionalProperties: false
      properties:
        PaymentProductUsed:
          $ref: '#/components/schemas/PaymentProductEnum'
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataResponse'
        Links:
          $ref: '#/components/schemas/StatusResponseLinks'
        UseWaitingScreen:
          type: boolean
          description: |
            if `true` the Initiating Party should show a waiting screen even if the the RedirectUrl is provided. On the waiting screen a redirection button should be placed. Click on the button should redirect the PSU to the link provided in the `RedirectUrl` field.
      description: |
        Payment Status Response

    RefundStatusResponse:
      required:
        - CommonPaymentData
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataRefundDetailsResponse'
        Links:
          $ref: '#/components/schemas/StatusResponseLinks'

    CommonPaymentDataRefundDetailsResponse:
      required:
        - RefundId
        - RefundStatus
      type: object
      additionalProperties: false
      properties:
        RefundId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this refund in subsequent api calls.
        RefundStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        InitiatingPartyReferenceId:
          maxLength: 36
          minLength: 1
          type: string
          description: |
            Reference to the payment created by the Initiating Party.
            This Id will not be visible to the Payment Service User.
          example: InitParty ref-id-23457890
        FundsAvailable:
          type: boolean
          description: |
            Information whether sufficient funding is available.
        DebtorInformation:
          $ref: '#/components/schemas/DebtorInformation'
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.
      description: |
        Basic type for Payment Initiation Response

    ConfirmationRequest:
      type: object
      additionalProperties: false
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuDataIdentification'

    PaymentIdentificationRequest:
      type: object
      additionalProperties: false
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuDataIdentification'

    PaymentAuthorisationRequest:
      type: object
      additionalProperties: false
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuDataIdentification'
        PsuCredentials:
          type: array
          items:
            $ref: '#/components/schemas/PsuAuthCredentials'
      example:
        {
          "PsuData": {
            "AspspPsuId": "Psu-12345",
            "AspspCustomerId": "Psu-12345",
            "AspspPsuIdType": "string",
            "AspspPsuCorporateId": "string",
            "AspspPsuCorporateIdType": "string"
          },
          "PsuCredentials": [
          {
            "CredentialId": "ewl-user-id",
            "CredentialValue": "Test User"
          },
          {
            "CredentialId": "ewl-password",
            "CredentialValue": "qwerty"
          }
          ]
        }
    PaymentAuthorisationResponse:
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataAuthorisationResponse'
        Links:
          $ref: '#/components/schemas/AuthorisationResponseLinks'

    RefundAuthorisationResponse:
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataRefundAuthorisationResponse'
        Links:
          $ref: '#/components/schemas/RefundAuthorisationResponseLinks'

    PaymentAuthorisationUpdateRequest:
      type: object
      additionalProperties: false
      properties:
        PsuData:
          $ref: '#/components/schemas/PsuDataIdentification'
        PsuCredentials:
          type: array
          items:
            $ref: '#/components/schemas/PsuAuthCredentials'
        AuthenticationMethodId:
          type: string
          description: |
            Id of the selected method.
        ScaAuthenticationData:
          type: string
          description: |
            Depending on method. In case of binary data it has to be
            given base64 encoded.
      example:
        {
          "AuthenticationMethodId": "13"
        }

    CommonPaymentDataAuthorisationResponse:
      type: object
      additionalProperties: false
      required:
        - PaymentId
        - PaymentStatus
      properties:
        PaymentId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        PaymentStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        AuthStatus:
          $ref: '#/components/schemas/AuthStatusEnum'
        TransactionFees:
          $ref: '#/components/schemas/TransactionFees'
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.

    CommonPaymentDataRefundAuthorisationResponse:
      type: object
      additionalProperties: false
      required:
        - RefundId
        - RefundStatus
      properties:
        RefundId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        RefundStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        AuthStatus:
          $ref: '#/components/schemas/AuthStatusEnum'
        TransactionFees:
          $ref: '#/components/schemas/TransactionFees'
        AuthorisationRequiredData:
          $ref: '#/components/schemas/AuthorisationRequiredData'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.

    PaymentConfirmationResponse:
      description: |
        PaymentConfirmationResponse
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataConfirmationResponse'
        Links:
          $ref: '#/components/schemas/Links'

    CommonPaymentDataConfirmationResponse:
      type: object
      additionalProperties: false
      required:
        - PaymentId
        - PaymentStatus
      properties:
        PaymentId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        PaymentStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.

    RefundConfirmationResponse:
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataRefundConfirmationResponse'
        Links:
          $ref: '#/components/schemas/RefundLinks'

    CommonPaymentDataRefundConfirmationResponse:
      type: object
      additionalProperties: false
      required:
        - RefundId
        - RefundStatus
      properties:
        RefundId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        RefundStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.

    PaymentIdentificationResponse:
      description: |
        PaymentIdentificationresponse
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataIdentificationResponse'
        Links:
          $ref: '#/components/schemas/Links'

    RefundIdentificationResponse:
      description: |
        Payment Identification response
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataRefundIdentificationResponse'
        Links:
          $ref: '#/components/schemas/RefundLinks'

    CommonPaymentDataIdentificationResponse:
      type: object
      additionalProperties: false
      required:
        - PaymentId
        - PaymentStatus
      properties:
        PaymentId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        PaymentStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        AuthStatus:
          $ref: '#/components/schemas/AuthStatusEnum'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.

    CommonPaymentDataRefundIdentificationResponse:
      type: object
      additionalProperties: false
      required:
        - RefundId
        - RefundStatus
      properties:
        RefundId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        RefundStatus:
          $ref: '#/components/schemas/PaymentStatusEnum'
        AuthStatus:
          $ref: '#/components/schemas/AuthStatusEnum'
        PsuMessage:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Text to be displayed to the PSU.

    PaymentCancellationResponse:
      type: object
      additionalProperties: false
      properties:
        CommonPaymentData:
          $ref: '#/components/schemas/CommonPaymentDataAuthorisationResponse'
        Links:
          $ref: '#/components/schemas/InitiationResponseLinks'

    Refund:
      required:
        - PaymentId
        - Amount
      type: object
      additionalProperties: false
      properties:
        PaymentId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        EndToEndId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Unique identification, as assigned by the initiating party,
            to unambiguously identify the transaction. This identification is passed
            on, unchanged, throughout the entire end-to-end chain.
          example: ID-0123456789
        Amount:
          $ref: '#/components/schemas/Amount'
        CreditorInformation:
          $ref: '#/components/schemas/CreditorInformation'

    PaymentProductEnum:
      type: string
      default: PSD2-SCT
      description: |
        Indicates the requested payment method.
      enum:
        - PSD2-SCT
        - PSD2-SCT-Inst
        - PSD2-Target2
        - PSD2-Domestic
        - PSD2-Domestic-Inst
        - IDEAL

    ProductSpecificMasterData:
      type: object
      additionalProperties: false
      required:
        - ParamName
        - ParamValue
      properties:
        ParamName:
          type: string
          minLength: 1
          maxLength: 250
          description: |
            Name of the parameter exactly as required by the payment method.
        ParamValue:
          type: string
          minLength: 1
          maxLength: 2048
          description: |
            Actual value of the parameter.

    PsuBankPreferences:
      type: object
      additionalProperties: false
      description: |
        The PSU preferenes details saved in the PSU Management
      properties:
        AspspName:
          type: string
          description: |
            The name of the ASPSP/Issuer
        AspspLogoUrl:
          type: string
          description: |
            the logo url of the ASPSP/Issuer
        DebtorAccountIdentification:
          type: string
          description: |
            The masked IBAN or any other identifier recognized by the PSU and ASPSP/Issuer

    AmountBreakdown:
      type: object
      additionalProperties: false
      description: |-
        Breakdown of the transaction amount. The sum of all the fields within this breakdown must be equal to the transaction amount. Possible to use for iDEAL payments, only in the FastCheckout flow.
      required:
        - OrderAmount
        - ShippingCost
      properties:
        OrderAmount:
          pattern: ^\d{1,13}\.\d{1,5}$
          type: string
          description: |
            Order amount. Possible to use for iDEAL payments, only in the fast-checkout flow.
          example: "123.45"
        ShippingCost:
          pattern: ^\d{1,13}\.\d{1,5}$
          type: string
          description: |
            Shipping cost. Possible to use for iDEAL payments, only in the fast-checkout flow.
          example: "123.45"

    AmountRelatedDetails:
      type: object
      additionalProperties: false
      description: |
        contains additional information about the fees and estimated amount
      properties:
        TransactionFees:
          $ref: '#/components/schemas/TransactionFees'
        ExchangeRateInformation:
          $ref: '#/components/schemas/ExchangeRateInformationResponse'
        CurrencyConversionFee:
          $ref: '#/components/schemas/CurrencyConversionFee'
        EstimatedTotalAmount:
          $ref: '#/components/schemas/EstimatedTotalAmount'
        EstimatedInterbankSettlementAmount:
          $ref: '#/components/schemas/EstimatedInterbankSettlementAmount'

    DebtorInformation:
      type: object
      additionalProperties: false
      description: |
        All debtor relavant data
      properties:
        Name:
          maxLength: 140
          type: string
          description: |
            The name of the debtor.
        Agent:
          type: string
          pattern: '[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}'
          description: |
            BIC of the financial institution servicing an account for
            the debtor.
        Account:
          $ref: '#/components/schemas/DebtorAccount'
        UltimateDebtor:
          maxLength: 140
          type: string
          description: |
            Ultimate party that owes an amount of money to the (ultimate)
            creditor.
        ShippingAddress:
          $ref: '#/components/schemas/AddressData'
        BillingAddress:
          $ref: '#/components/schemas/BillingAddress'

    DebtorInformationResponse:
      type: object
      additionalProperties: false
      description: |
        All debtor relavant data
      properties:
        Name:
          maxLength: 140
          type: string
          description: |
            The name of the debtor.
        Agent:
          type: string
          pattern: '[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}'
          description: |
            BIC of the financial institution servicing an account for
            the creditor.
        Account:
          $ref: '#/components/schemas/DebtorAccount'
        ContactDetails:
          $ref: "#/components/schemas/DebtorContactDetailsResponse"
        ShippingAddress:
          $ref: "#/components/schemas/AddressData"
        BillingAddress:
          $ref: "#/components/schemas/AddressData"

    CreditorInformation:
      type: object
      additionalProperties: false
      description: |
        All creditor relavant data
      properties:
        InitiatingPartySubId:
          maxLength: 50
          minLength: 1
          type: string
          description: |
            External identification of the subsidiary initiating party.
        Name:
          type: string
          description: |
            The name of creditor. Can be given for P2P payments only.
        Account:
          $ref: '#/components/schemas/CreditorAccount'
        Agent:
          pattern: '[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}'
          type: string
          description: |
            BIC of the financial institution servicing an account for
            the creditor.
        UltimateCreditor:
          maxLength: 140
          type: string
          description: |
            Ultimate party to which an amount of money is due.
        PostalAddress:
          $ref: '#/components/schemas/AddressData'
        CreditorDateAndPlaceOfBirth:
          $ref: '#/components/schemas/CreditorDateAndPlaceOfBirth'
        UltimateCreditorAccount:
          $ref: '#/components/schemas/CreditorAccount'

    IdentificationTypeEnum:
      type: string
      description: |
        Type of the account number.
      enum:
        - IBAN
        - SortCodeAccountNumber

    DebtorContactDetails:
      type: object
      additionalProperties: false
      title: DebtorContactDetailsRequestData
      properties:
        FirstName:
          type: boolean
          description: |
            Request to provide the first name of the debtor
          example: true
          default: false
        LastName:
          type: boolean
          description: |
            Request to provide the last name of the debtor
          example: true
          default: false
        PhoneNumber:
          type: boolean
          description: |
            Request to provide the phone number of the debtor in E.164 format
          example: true
          default: false
        Email:
          type: boolean
          description: |
            Request to provide the e-mail address of the debtor
          example: true
          default: false

    DebtorContactDetailsResponse:
      type: object
      additionalProperties: false
      properties:
        FirstName:
          type: string
          description: |
            The first name of the debtor
        LastName:
          type: string
          description: |
            The last name of the debtor
        PhoneNumber:
          type: string
          description: |
            The phone number of the debtor in E.164 format
          pattern: "^\\+[1-9][0-9]{1,14}$"
          example: "+31612345678"
        Email:
          type: string
          description: |
            The e-mail address of the debtor
          format: email
          example: "bob.smith@mymail.com"
          minLength: 1

    AddressData:
      type: object
      additionalProperties: false
      properties:
        FirstName:
          type: string
          description: |
            The first name of the debtor
          example: "Bob"
          minLength: 1
        LastName:
          type: string
          description: |
            The last name of the debtor
          example: "Smith"
          minLength: 1
        CompanyName:
          type: string
          description: |
            The company name of the debtor
          example: "Cookie factory"
          minLength: 1
        PostCode:
          type: string
          description: |
            The postal code of the address without spaces
          example: "1234AB"
          minLength: 1
        BuildingNumber:
          type: string
          description: |
            The house number of the address
          example: "100"
          minLength: 1
        Floor:
          type: string
          description: |
            The addition of the address
          example: "3B"
          minLength: 1
        StreetName:
          type: string
          description: |
            The street of the address
          example: "Coolsingel"
          minLength: 1
        TownName:
          type: string
          description: |
            The city of the address
          example: "Rotterdam"
          minLength: 1
        Country:
          type: string
          description: |
            The code of the coutry regarding ISO 3166 standard. For the IDEAL payments the country name will be provided
          minLength: 1
        CountrySubDivision:
          type: string
          description: |
            Country sub division.
          maxLength: 35
          minLength: 1

    BillingAddress:
      type: object
      additionalProperties: false
      properties:
        SameAsShippingAddress:
          type: boolean
          default: false
          description: |
            Indicates whether the billing addess is the same with shipping address. If true the information provided under `BillingAddressDetails` will be ignored
        BillingAddressDetails:
          $ref: '#/components/schemas/AddressData'

    CreditorDateAndPlaceOfBirth:
      required:
        - BirthDate
        - CityOfBirth
        - CountryOfBirth
      type: object
      additionalProperties: false
      properties:
        BirthDate:
          type: string
          description: Date on which a person is born.
          format: date
        CityOfBirth:
          maxLength: 35
          type: string
          description: City where a person was born.
        CountryOfBirth:
          pattern: '^[A-Z]{2,2}$'
          type: string
          description: Country where a person was born.
      description: |
        Date and place of birth of a person.
        This information must be requested for detection of Fraud, Money-Laundering and Terrorism Financing in case of international payment.
      x-DefinitionType: ISO20022

    PaymentStatusEnum:
      type: string
      description: |
        Payment status.
        * 'TimeoutAtTpp': This status can only occur in combination with the Bank Selection Interface (UseAuthorisationLandingPages = true). It's set if the Bank Selection Interface concludes that the payment cannot be completed because of a timeout. It's a final state. 
      enum:
        - Open
        - Authorised
        - PartiallyAuthorised
        - Pending
        - SettlementInProcess
        - SettlementCompleted
        - ReceivedByCreditorBank
        - ReceivedOnCreditorAccount
        - Cancelled
        - CancelledAtTPP
        - TimeoutAtTpp
        - Error
        - Expired

    RiskInformation:
      type: object
      additionalProperties: false
      properties:
        PaymentContextCode:
          type: string
          description: |
            Specifies the payment context. Payments for EcommerceGoods
            and EcommerceServices will be expected to have a MerchantCategoryCode
            and MerchantCustomerIdentification populated. Payments for EcommerceGoods
            will also have the DeliveryAddress populated.
          enum:
            - BillPayment
            - ContactlessTravel
            - EcommerceGoods
            - EcommerceServices
            - Kiosk
            - Parking
            - P2P
            - BillingGoodsAndServicesInAdvance
            - BillingGoodsAndServicesInArrears
            - PispPayee
            - EcommerceMerchantInitiatedPayment
            - FaceToFacePointOfSale
            - TransferToSelf
            - TransferToThirdParty
        MerchantCategoryCode:
          maxLength: 4
          minLength: 3
          type: string
          description: |
            Category code conform to ISO 18245, related to the type of
            services or goods the merchant provides for the transaction.
        MerchantCustomerId:
          maxLength: 70
          minLength: 1
          type: string
          description: |
            The unique customer identifier of the PSU with the merchant.
        DeliveryAddress:
          allOf:
            - $ref: '#/components/schemas/AddressData'
          deprecated: true
          description: |
            The Object is deprecated and will be ignored in the current implementation.
            Use `DebtorInformation.ShippingAddress` from `CommonPaymentData` object instead
        ChannelType:
          type: string
          description: |
            Payment channel type.
          enum:
            - ContactLess
            - PointOfSale
            - Ecommerce
            - UnattendedTerminal
        ChannelMetaData:
          type: string
          description: |
            Additional information related to the channel.
        AppliedAuthenticationApproach:
          type: string
          description: |
            Indicates the Applied Authentication Approach
          enum:
            - CA
            - SCA
        ReferencePaymentOrderId:
          type: string
          description: |
            Indicates the Applied Authentication Approach
          maxLength: 128
      description: |
        Information used for risk scoring by the ASPSP.

    TransactionFees:
      type: object
      additionalProperties: false
      properties:
        Currency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            A code allocated to a currency by a Maintenance Agency under
            an international identification scheme, as described in the latest edition
            of the international standard ISO 4217 "Codes for the representation of
            currencies and funds".
        Amount:
          pattern: ^\d{1,13}\.\d{1,5}$
          type: string
          description: |
            Amount of the fees.
        FeesApply:
          type: boolean
          default: false
          description: |
            Indicates if transaction fees are applicable on the payment.
      description: |
        Information used for transporting transaction fees by the ASPSP.

    CurrencyConversionFee:
      type: object
      additionalProperties: false
      required:
        - Currency
        - Amount
      properties:
        Currency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            A code allocated to a currency by a Maintenance Agency under
            an international identification scheme, as described in the latest edition
            of the international standard ISO 4217 "Codes for the representation of
            currencies and funds".
        Amount:
          pattern: ^\d{1,13}\.\d{1,5}$
          type: string
          description: |
            Amount of the fees.
      description: |
        Currency Conversion Fee

    CrossCurrencyPayment:
      type: object
      additionalProperties: false
      required:
        - CrossCurrencyTransaction
      properties:
        CrossCurrencyTransaction:
          type: boolean
          default: false
          description: |
            Set to true if a currency exchangeis required. If set to true the ExchangeRateInformation section can be used.
        ExchangeRateInformation:
          $ref: '#/components/schemas/ExchangeRateInformationRequest'

    ExchangeRateInformationRequest:
      type: object
      additionalProperties: false
      properties:
        UnitCurrency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            Currency in which the rate of exchange is expressed in a currency
            exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        ExchangeRate:
          type: number
          description: |
            The factor used for conversion of an amount from one currency
            to another. This reflects the price at which one currency was bought with
            another currency. Rate expressed as a decimal, for example, 0.7 is 7/10
            and 70%.
        RateType:
          type: string
          description: |
            Specifies the type used to complete the currency exchange.
            * Spot: Exchange rate applied is the spot rate.
            * Sale: Exchange rate applied is the market rate at the time of the sale.
            * Agreed: Exchange rate applied is the rate agreed between the parties.
          enum:
            - Spot
            - Sale
            - Agreed
        ContractIdentification:
          maxLength: 256
          type: string
          description: |
            Unique and unambiguous reference to the foreign exchange contract
            agreed between the initiating party/creditor and the debtor agent.
      description: |
        Provides details on the currency exchange rate and contract.

    ExchangeRateInformationResponse:
      type: object
      additionalProperties: false
      properties:
        UnitCurrency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            Currency in which the rate of exchange is expressed in a currency
            exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        ExchangeRate:
          type: number
          description: |
            The factor used for conversion of an amount from one currency
            to another. This reflects the price at which one currency was bought with
            another currency. Rate expressed as a decimal, for example, 0.7 is 7/10
            and 70%.
        RateType:
          type: string
          description: |
            Specifies the type used to complete the currency exchange.
            * Spot: Exchange rate applied is the spot rate.
            * Sale: Exchange rate applied is the market rate at the time of the sale.
            * Agreed: Exchange rate applied is the rate agreed between the parties.
          enum:
            - Spot
            - Sale
            - Agreed
        ContractIdentification:
          maxLength: 256
          minLength: 1
          type: string
          description: |
            Unique and unambiguous reference to the foreign exchange contract
            agreed between the initiating party/creditor and the debtor agent.
        ExpirationDateTime:
          type: string
          description: |
            Expiration date time. ISO 8601 DateTime.
          format: date-time
      description: |
        Provides details on the currency exchange rate and contract.

    EstimatedTotalAmount:
      type: object
      additionalProperties: false
      required:
        - Currency
        - Amount
      properties:
        Currency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            A code allocated to a currency by a Maintenance Agency under
            an international identification scheme, as described in the latest edition
            of the international standard ISO 4217 "Codes for the representation of
            currencies and funds".
        Amount:
          pattern: ^\d{1,13}\.\d{1,5}$
          type: string
          description: |
            Amount
      description: |
        Estimated Total Amount.

    EstimatedInterbankSettlementAmount:
      type: object
      additionalProperties: false
      required:
        - Currency
        - Amount
      properties:
        Currency:
          pattern: '[A-Z]{3,3}'
          type: string
          description: |
            A code allocated to a currency by a Maintenance Agency under
            an international identification scheme, as described in the latest edition
            of the international standard ISO 4217 "Codes for the representation of
            currencies and funds".
        Amount:
          pattern: ^\d{1,13}\.\d{1,5}$
          type: string
          description: |
            Amount
      description: |
        Estimated Interbank Settlement Amount.

    CategoryPurposeEnum:
      type: string
      description: |
        Specifies the high level purpose of the instruction based on a set of pre-defined categories.
        This is used by the initiating party to provide information concerning the processing of the payment. It is likely to trigger special processing by any of the agents involved in the payment chain.
        Not all of the given codes might be accepted by all banks. The standard for STET for example is limited to CASH, CORT, DVPM, INTC and TREA
      enum:
        - CASH
        - CORT
        - DIVI
        - DVPM
        - INTC
        - INTE
        - PENS
        - SALA
        - SSBE
        - SUPP
        - TAXS
        - TREA

    RegulatoryReportingCode:
      maxLength: 10
      type: string
      description: |
        Information needed due to regulatory and statutory requirements.
        Economical codes to be used are provided by the National Competent Authority
      x-DefinitionType: ISO20022

    RefundAuthorisationApproachLinks:
      type: object
      additionalProperties: false
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The actual
        hyperlinks used in the response depend on the dynamical decisions on
        authorization approach for example. Remark - All links are full links.

        * 'PreAuthenticationForEmbedded': In case of an embedded pre-authentication required by the ASPSP, the Initiating Party has to use this link.
        * 'RedirectUrl': In case of an Redirect approach, the Initiating Party has to use this link to redirect the PSU’s browser session to the ASPSP.
        * 'PostAuthorisationForExplicit': In case the ASPSP requires explicit start of authorization.
        * 'PostIdentificationForDecoupled': In case of a Decoupled approach, identification of the PSU required to start the decoupled authorization.
        * 'PostAuthorisationForEmbedded': In case of an embedded approach, endpoint to be called to start the embedded authorization.
        * 'SelectAuthenticationMethod': In case of an embedded approach, the Initiating Party has to use this link to pass the SCA method.
        * 'AuthorizeTransaction': In case of an embedded approach, the Initiating Party has to authorize the payment by providing the SCA OneTimePassword.
        * 'ConfirmationRequired': Endpoint to be called for payment confirmation for ASPSPs that require explicit confirmation of payments.
        * 'GetRefundStatus': Endpoint to be called for retrieving the refund status.
      properties:
        PreAuthenticationForEmbedded:
          $ref: '#/components/schemas/Link'
        RedirectUrl:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForExplicit:
          $ref: '#/components/schemas/Link'
        PostIdentificationForDecoupled:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        SelectAuthenticationMethod:
          $ref: '#/components/schemas/Link'
        AuthorizeTransaction:
          $ref: '#/components/schemas/Link'
        ConfirmationRequired:
          $ref: '#/components/schemas/Link'
        GetRefundStatus:
          $ref: '#/components/schemas/Link'

    StatusResponseLinks:
      type: object
      additionalProperties: false
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The actual
        hyperlinks used in the response depend on the dynamical decisions on
        authorization approach for example. Remark - All links are full links.

        * 'RedirectUrl': In case of an Redirect approach, the Initiating Party has to use this link to redirect the PSU’s browser session.
        * 'PostAuthorisationForExplicit': In case the ASPSP requires explicit start of authorization.
        * 'PostIdentificationForDecoupled': In case of a Decoupled approach, identification of the PSU required to start the decoupled authorization.
        * 'PutAuthorisationForEmbedded': In case of an embedded approach, endpoint to be called to add information to the Authorization.
        * 'SelectAuthenticationMethod': In case of an embedded approach, the Initiating Party has to use this link to pass the SCA method.
        * 'AuthorizeTransaction': In case of an embedded approach, the Initiating Party has to authorize the payment by providing the SCA OneTimePassword.
        * 'ConfirmationRequired': Endpoint to be called for payment confirmation for ASPSPs that require explicit confirmation of payments.
      properties:
        RedirectUrl:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForExplicit:
          $ref: '#/components/schemas/Link'
        PostIdentificationForDecoupled:
          $ref: '#/components/schemas/Link'
        PostAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        PutAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        SelectAuthenticationMethod:
          $ref: '#/components/schemas/Link'
        AuthorizeTransaction:
          $ref: '#/components/schemas/Link'
        ConfirmationRequired:
          $ref: '#/components/schemas/Link'

    RefundAuthorisationResponseLinks:
      type: object
      additionalProperties: false
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The actual
        hyperlinks used in the response depend on the dynamical decisions on
        authorization approach for example. Remark - All links are full links.

        * 'RedirectUrl': In case of an Redirect approach, the Initiating Party has to use this link to redirect the PSU’s browser session to the ASPSP.
        * 'PutAuthorisationForEmbedded': In case of an embedded approach, endpoint to be called to add information to the Authorization.
        * 'SelectAuthenticationMethod': In case of an embedded approach, the Initiating Party has to use this link to pass the SCA method.
        * 'AuthorizeTransaction': In case of an embedded approach, the Initiating Party has to authorize the payment by providing the SCA OneTimePassword.
        * 'ConfirmationRequired': Endpoint to be called for payment confirmation for ASPSPs that require explicit confirmation of payments.
        * 'GetRefundStatus': Endpoint to be called for retrieving the refund status.
      properties:
        RedirectUrl:
          $ref: '#/components/schemas/Link'
        PutAuthorisationForEmbedded:
          $ref: '#/components/schemas/Link'
        SelectAuthenticationMethod:
          $ref: '#/components/schemas/Link'
        AuthorizeTransaction:
          $ref: '#/components/schemas/Link'
        ConfirmationRequired:
          $ref: '#/components/schemas/Link'
        GetRefundStatus:
          $ref: '#/components/schemas/Link'

    RefundLinks:
      type: object
      additionalProperties: false
      description: |
        A list of hyperlinks to be recognized by the Initiating Party. The actual
        hyperlinks used in the response depend on the dynamical decisions on
        authorization approach for example. Remark - All links are full links.

        * 'GetRefundStatus': Endpoint to be called for retrieving the refund status.
      properties:
        GetRefundStatus:
          $ref: '#/components/schemas/Link'

    AccountError:
      type: object
      additionalProperties: false
      required:
        - PaymentId
        - Error
      properties:
        PaymentId:
          maxLength: 35
          minLength: 1
          type: string
          description: |
            Id generated by the Open Banking Service. This should be used to
            refer to this payment in subsequent api calls.
        Error:
          required:
            - Code
            - Message
          type: object
          properties:
            Code:
              pattern: '[0-9]{1,3}'
              type: string
            Message:
              maxLength: 140
              minLength: 1
              type: string
          description: |
            |Code |Description
            |-----|---------------------------------------
            |001  |The payment is not authorized.
            |002  |The payment is not confirmed.
            |003  |The refund amount is above the payment amount or the remaning payment amount.
            |004  |The creditor account does not match the initial payment debtor account.
            |005  |No existing payment found for the paymentId you provided.
            |006  |Both Identification and SchemeName fields are mandatory for the CreditorAccount.
            |007  |The refund currency does not match the initial payment currency.
            |008  |The payment id is missing.
            |009  |The refund amount is missing.
            |010  |The refund currency is missing.
            |011  |The Creditor Account is missing.

  headers:
    X-Request-ID:
      required: true
      description: |
        UUID for unique request identification.
      schema:
        type: string
        maxLength: 36
        minLength: 1
      example: abcdef2e-3000-4000-88cc-ae40e3b113d7
      
    MessageCreateDateTime:
      required: true
      schema:
        type: string
        format: 'date-time'
      description: |
        The message create date time.

        ISO 8601 DateTime.
      example: "2020-09-25T08:15:00.856Z"
      
    AspspScaApproach:
      description: |
        Indicates whether a decoupled flow is used by the ASPSP to continue the Strong Customer Authentication. 
        This field only returns the values 'Decoupled' or 'SuspectedDecoupled'. Other possible flow options are communicated within the Links section of the response.
      schema:
        type: string
        
    Signature:
      required: false
      description: |
        Required for IDEAL payments.
      schema:
        type: string
    Digest:
      description: Is contained if and only if the `Signature` element is contained in the header of the request.
      schema:
        type: string
      example: "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="

  parameters:
    X-Request-ID:
      name: X-Request-ID
      in: header
      description: |
        UUID for unique request identification.
      required: true
      schema:
        maxLength: 36
        minLength: 1
        type: string
      example: abcdef2e-3000-4000-88cc-ae40e3b113d7
      

    Service:
      name: Service
      in: header
      description: |
        The name of the service for which the reach will be retrieved. Only AIS or PIS is allowed.
      schema:
        type: string
      required: true
      
    country:
      name: country
      in: query
      description: |
          List ASPSPs of given country only. ISO 3166-1, Alpha-2 standard
      schema:
        maxLength: 2
        minLength: 2
        type: string
        
    allDetails:
      name: allDetails
      in: query
      description: |
        When `true` the details block in the response is provided.
      schema:
        type: boolean
        default: false
        
    allOptions:
      name: allOptions
      in: query
      description: |
        When `true` the options block in the response is provided.
      schema:
        type: boolean
        default: false
        
    categoryLabel:
      name: categoryLabel
      in: query
      description: |
        Filter request that contains a specified Label
      schema:
        type: string
    allAspspSpecificFields:
      name: allAspspSpecificFields
      in: query
      description: |
        When `true` the AspspSpecificFields block in the response is provided.
      schema:
        type: boolean
        default: false

    AppRedirectPreferred:
      name: AppRedirectPreferred
      in: header
      schema:
        type: boolean
        default: false
      description: |
        Indicates whether the user uses mobile device\tablet or PC

    PsuId:
      name: psuId
      in: path
      description: |
        This field can be filled with an ID from the Initiating Party which refers to the PSU.
      required: true
      schema:
        type: string
      example: unique_psu_id_23858

    RegistrationId:
      name: registrationId
      in: path
      schema:
        type: string
      required: true
      description: |
        Registration ID is the source ID, which is being created to link the PSUs under the same ProductType

    InitiatingPartyReturnUrl:
      name: InitiatingPartyReturnUrl
      in: header
      description: |
        The callback URL for the redirection back to the Initiating Party
        after authorization.
      schema:
        maxLength: 4000
        minLength: 1
        type: string
        example: https://www.example.org

    InitiatingPartyNotificationUrl:
      name: InitiatingPartyNotificationUrl
      in: header
      description: |
        The URL which will be used for notification service requests. The Open Banking Service supports two ways in which this field can be filled:
        * **Option A)** with an URL ending on /v2 or /v3, indicating the version of the Notification API implemented by the Initiating Party. In this case the URL called for notifications will be extended with /notification/status by the Open Banking Service. The 'NotificationVersion' field MUST NOT be filled.
        * **Option B)** with a full URL. The version information MUST BE provided in the 'NotificationVersion' field. In this case the provided URL will not be extended, and used as-is.
        
      examples: 
        Option A:
          value: https://www.example.org/myendpoint/v3
        Option B:
          value: https://www.example.org/myendpoint/notification
      schema:
        maxLength: 4000
        minLength: 1
        type: string

    NotificationVersion:
      name: NotificationVersion
      in: header
      description: |
        The version which shall be used for notification service requests. The version is either v2 or v3. 
        If the NotificationVersion is given:
        -  The URLs for notification endpoints must be provided as full URLs.
        -  No endpoint specific extension will be added when calling out for notifications.
        
        See the description of InitiatingPartyNotificationUrl for more information.
      example: v3
      schema:
        type: string

    UseAuthorisationLandingPages:
      name: UseAuthorisationLandingPages
      in: header
      schema:
        type: boolean
        default: false
      description: |
        If true, the Bank Selection Interface provided by Open Banking Service will be used to request required information from the PSU directly.

    Locale:
      name: Locale
      in: header
      schema:
        type: string
      description: |
        2-digit ISO-639 code for the language in which the Bank Selection Interface is displayed.

        For special languages can be used 5-digit code like nl-BE, where first is ISO-639 langauge code and the second is ISO-3166 country code.

        If not set, the language of the Bank Selection Interface is taken over from the end user’s browser configuration or the system configuration of the Bank Selection Interface server.

    AspspId:
      name: aspspId
      in: path
      description: |
        ASPSP ID.
      required: true
      schema:
        type: string
      example: 20101

    Recurring:
      name: recurring
      in: query
      description: |
        Indicates if the consent is for recurring access or for one
        time access to the account data.

        **Note -** Default value is set to false, only for ASPSPs having implemented the CBI protocol.
      schema:
        type: boolean
        
    AspspPsuId:
      name: AspspPsuId
      in: header
      description: |
        PSU’s Id at ASPSP. Allows the unique identification of
        the PSU at the ASPSP.
      schema:
        maxLength: 36
        minLength: 1
        type: string
      example: PSU-12345

    AspspPsuIdType:
      name: AspspPsuIdType
      in: header
      description: |
        Type of the Aspsp PSU-ID, needed in scenarios where PSUs have
        several PSU-IDs as access possibility.
      schema:
        type: string

    AspspPsuCorporateId:
      name: AspspPsuCorporateId
      in: header
      description: |
        Identification of a Corporate in the Online Channels.
      schema:
        type: string

    AspspPsuCorporateIdType:

      name: AspspPsuCorporateIdType
      in: header
      description: |
        This is describing the type of the identification needed by the
        ASPSP to identify the PSUCorporate-ID type.
      schema:
        type: string

    AspspProductCode:
      name: AspspProductCode
      in: header
      description: |
        This is describing the ProductCode as defined by the ASPSP.
      schema:
        type: string

    LastLogin:
      name: LastLogin
      in: header
      description: |
        PSU Session information.

        The time when the PSU last logged in with the TPP.
      schema:
        type: string
        format: date-time

    PsuIpAddress:
      name: PsuIpAddress
      in: header
      description: |
        PSU Session information.

        The forwarded IP Address header field consists of the
        corresponding HTTP request IP Address field between PSU and TPP
        . It shall be contained if and only if this request was
        actively initiated by the PSU.
      schema:
        maxLength: 35
        minLength: 1
        type: string

    PsuIpPort:
      name: PsuIpPort
      in: header
      description: |
        PSU Session information.

        The forwarded IP Port header field consists of the
        corresponding HTTP request IP Port field between PSU and TPP,
        if available.
      schema:
        maxLength: 5
        minLength: 1
        type: string

    HttpMethod:
      name: HttpMethod
      in: header
      description: |
        PSU Session information.

        HTTP method used at the PSU-TPP interface.
        Available values - GET, POST, PUT, DELETE.
      schema:
        maxLength: 6
        minLength: 3
        type: string

    HttpHeaderUserAgent:
      name: HttpHeaderUserAgent
      in: header
      description: |
        PSU Session information.

        The forwarded Agent header field of the HTTP request between
        PSU and TPP.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    HttpHeaderReferer:
      name: HttpHeaderReferer
      in: header
      description: |
        PSU Session information.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    HttpHeaderAccept:
      name: HttpHeaderAccept
      in: header
      description: |
        PSU Session information.

        The forwarded IP Accept header fields consist of the
        corresponding HTTP request Accept header fields between PSU and
        TPP.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    HttpHeaderAcceptCharset:
      name: HttpHeaderAcceptCharset
      in: header
      description: |
        PSU Session information.

        The forwarded IP Accept header fields consist of the
        corresponding HTTP request Accept header fields between PSU and
        TPP.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    HttpHeaderAcceptEncoding:
      name: HttpHeaderAcceptEncoding
      in: header
      description: |
        PSU Session information.

        The forwarded IP Accept header fields consist of the
        corresponding HTTP request Accept header fields between PSU and
        TPP.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    HttpHeaderAcceptLanguage:
      name: HttpHeaderAcceptLanguage
      in: header
      description: |
        PSU Session information.

        The forwarded IP Accept header fields consist of the
        corresponding HTTP request Accept header fields between PSU and
        TPP.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    DeviceId:
      name: DeviceId
      in: header
      description: |
        UUID (Universally Unique Identifier) for a device, which is
        used by the PSU. UUID identifies either a device or a device
        dependant application installation. In case of an installation
        identification this ID need to be unaltered until removal from
        device.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    GeoLocation:
      name: GeoLocation
      in: header
      description: |
        The forwarded Geo Location of the corresponding http request
        between PSU and TPP.
      schema:
        maxLength: 500
        minLength: 1
        type: string

    UseImplicitPreAuthCombined:
      name: UseImplicitPreAuthCombined
      in: header
      description: |
        To trigger such scope request towards the ASPSP
      schema:
        type: boolean
        default: false

    MessageCreateDateTime:
      name: MessageCreateDateTime
      in: header
      description: |
        The message create date time.

        ISO 8601 DateTime.
      required: true
      schema:
        type: string
        format: date-time
      example: "2022-09-25T08:15:00.856Z"

    ConsentId:
      name: consentId
      in: path
      description: |
        Id of the consent as received in the response to POST consents.
      required: true
      schema:
        maxLength: 1024
        minLength: 1
        type: string
      example: 48651

    AuthorisationId:
      name: authorisationId
      in: path
      description: |
        Id of the authorization as received in the response to the
        previous request in the corresponding Link.
      required: true
      schema:
        maxLength: 1024
        minLength: 1
        type: string
      example: aid-4846

    Page:
      name: page
      in: query
      description: |
        Used to retrieve a specific page in case the result is 
        paginated. The value can be first, last, prev, next or a 
        numerical value to request for a dedicated result page.
      schema:
        type: string

    TotalPages:
      name: totalPages
      in: query
      required: false
      schema:
        type: integer
      description: Used to limit the number of total pages retrieved by one request, if the result is paginated by the ASPSP.

    AccountId:
      name: accountId
      in: path
      description: |
        Id of the account of the PSU as retrieved form the GET accounts
        response.
      required: true
      schema:
        type: string

    AccountIdQueryParam:
      name: accountId
      in: query
      description: |
        The account id for which we must retrieved the balances. It
        could be given to restrict to transactions of given account. If
        not given, all stored transactions are responded.
      schema:
        type: string

    DateFrom:
      name: dateFrom
      in: query
      description: |
        Date and time. All transactions on this date are included in
        the result. If no time is filled it will be set to 00:00.
        If the ASPSP doesn’t support time, the time part is omitted.
      schema:
        type: string

    DateTo:
      name: dateTo
      in: query
      description: |
        Date and time, transactions up to this date are included. So
        transaction on this date are not included in the result.
      schema:
        type: string

    Dl:
      name: dl
      in: query
      description: Download ID as given in the download link of GET transactions.
      required: true
      schema:
        type: string
      example: 54339b88a4394d089aeacc8aece1625b

    paymentId:
      name: paymentId
      in: path
      description: |
        The Id used by the Open Banking Service to refer to a payment.

        Optionally the payment can also be refered by the **InitiatingPartyReferenceId** or the **EndToEndId**, to do so start with **ref** or **e2e** prefixes followed by the respective identifier.
      required: true
      schema:
        type: string
      example: 486215

    refundId:
      name: refundId
      in: path
      description: |
        The Id used by the Open Banking Service to refer to a refund.
      required: true
      schema:
        type: string
      example: e2e-pid-486215

    authorisationId:
      name: authorisationId
      in: path
      required: true
      schema:
        type: string
      example: aid-4846
      description: |
        The Id used by the Open Banking Service to refer to an authorisation resource.

    Psuid:
      name: Psuid
      in: path
      description: |
        The Id of the PSU registered at the Open Banking Service
      required: true
      schema:
        type: string
      example: 12345

    confirm:
      name: confirm
      in: query
      description: |
        If set to 'true' the transaction will be immediately confirmed
        by the Open Banking Service if confirmation of the payment by the Initiating Party is required by the ASPSP.
      schema:
        type: string
        
    confirmForNotification:
      name: confirm
      in: query
      description: |
        If set to 'true' the transaction will be immediately confirmed by the Open Banking Service if confirmation of the payment by the Initiating Party is required by the ASPSP.
        <br>**Note:** This field is only applicable when the notification service is used by the Initiating Party to receive the status of the payment. When the notification is not used this flag can be set in the GET status API.
      schema:
        type: string

    Signature:
      name: Signature
      in: header
      description: |
        Conditionally required for iDEAL payments. The signature in the request should include a keyId with the value of fingerprint of the certificate
      schema:
        type: string

    Digest:
      name: Digest
      in: header
      description: Is contained if and only if the `Signature` element is contained in the header of the request.
      schema:
        type: string
      example: "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="

    InitiatingPartySubId:
      name: InitiatingPartySubId
      in: header
      schema:
        type: string
      description: |
        External identification of the subsidiary initiating party.

  responses:
    400:
      description: |
        Bad Request
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    401:
      description: |
        Missing or wrong IP Token
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    403:
      description: |
        Expired IP Token
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    404:
      description: |
        Not Found, resource at TPP not found
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    410:
      description: |
        Pagination resource timed out.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    415:
      description: |
        Unsupported Media Type
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    500:
      description: |
        Internal Server Error
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    502:
      description: |
        Bad Gateway, connection to ASPSP failed or token to the ASPSP
        missing.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    503:
      description: |
        Service Unavailable, too many request to the ASPSP.
      headers:
        X-Request-ID:
          description: |
            UUID for unique request identification.
          schema:
            type: string
        MessageCreateDateTime:
          description: |
            The message create date time.

            ISO 8601 DateTime.
          schema:
            type: string
            format: date-time
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    511:
      description: |
        Network Authentication Required, authentication to ASPSP failed
        .
      headers:
        X-Request-ID:
          description: |
            UUID for unique request identification.
          schema:
            type: string
        MessageCreateDateTime:
          description: |
            The message create date time.

            ISO 8601 DateTime.
          schema:
            type: string
            format: date-time
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    204:
      description: |
        No Content
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content: {}
    405:
      description: |
        Method not allowed
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
        MessageCreateDateTime:
          $ref: '#/components/headers/MessageCreateDateTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'